// Code generated by go-bindata.
// sources:
// migrations/20170523183416_init.sql
// migrations/20171108110099_rbac.sql
// migrations/20171122172200_indexes.sql
// DO NOT EDIT!

package migrate

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _migrations20170523183416_initSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x3d\xdb\x72\x1b\x37\x96\xcf\xf1\x57\xa0\xf2\xa2\xb8\x86\xde\x72\x66\x26\xbb\x5b\x35\x35\x0f\x8a\xc5\x78\x35\x2b\xcb\x89\x2c\x4f\x25\x4f\x2d\xb0\x1b\x24\x31\x6a\x02\x3d\x00\x5a\xb2\xf2\xf5\x5b\x8d\x4b\x37\xee\x0d\x52\xa4\x9c\xd5\x4b\x62\xf6\x39\xb8\x9e\xfb\x39\x00\xde\xbc\x01\xef\x97\xd7\xcb\x9b\xf3\xdb\xe5\x05\xf8\xf4\xcb\xd5\x7f\x80\x8b\x8f\xe0\xfa\xe3\x2d\x58\x5e\x5c\xde\xbe\x7a\xf5\xe6\x0d\xf8\xd3\x86\x52\x8e\xc0\xe7\x6e\xf8\xc7\xa7\x5f\xae\x00\x26\x80\xa3\x5a\x60\x4a\xc0\xd9\xe7\xee\x0c\x60\x0e\xd0\x17\x54\xf7\x02\x35\xe0\x71\x8b\x08\x10\x5b\xcc\xc1\x0e\x6f\x18\x94\x40\x98\x03\xd8\x75\x2d\x46\x8d\x6c\x0f\x9c\xbf\xbb\x7a\xcf\x20\x11\xf2\x03\xd8\xc1\xae\xc3\x64\x03\xe8\x1a\x30\xc4\x69\xcf\x6a\x04\x04\x05\x8c\xb6\x88\x83\xc7\x2d\xae\xb7\xa0\x63\xf4\x01\x37\x08\x40\xd0\x21\xb6\xc3\x9c\x0f\xad\xae\x29\x03\xd0\x41\x81\x12\xe9\xd5\xbb\x9b\xe5\xf9\xed\x12\xdc\x9e\xff\x78\xb5\x04\x77\xb0\x6e\xab\xcd\xd0\xdb\x1d\xf8\xee\xd5\x37\x77\xb8\xb9\x03\xd6\xdf\x3f\xcf\x6f\xde\xfd\xcf\xf9\xcd\x77\xff\xf9\xd7\xd7\x72\xd2\xd7\x9f\xaf\xae\xc0\xcf\x37\x97\x1f\xce\x6f\x7e\x03\xff\xbb\xfc\x6d\xf1\xea\x9b\xbb\x7a\x8b\xea\x7b\xde\xef\x34\xa2\x81\x1f\x3e\x99\xde\x2b\xd5\x6c\xac\x35\x09\x46\x5b\x03\x92\xea\x74\x00\x9b\x26\x27\x21\x97\xd7\x9f\x3f\x7c\x77\xc6\x10\x6c\xce\x16\xf2\x3f\x8f\x0c\x0b\x74\xb6\x38\x83\xcd\x0e\x93\x33\x17\x57\xfe\x56\xf5\x1c\x31\xd9\x51\xaa\x8b\xba\xe7\x82\xee\x34\x50\x7a\x24\x35\x43\x50\xa0\xa6\x82\x42\x8e\xe4\xc7\xcb\xf7\x97\xd7\xb7\xe0\xf3\xf5\xa7\xcb\xf7\xd7\xcb\x0b\x07\xb4\xef\x9a\x0c\xe8\xe2\xd5\x37\x97\xd7\x17\xcb\x5f\xc1\xb8\x0d\x95\xb5\x66\x15\x26\x0d\xfa\x02\xbe\x73\xd6\xf1\x75\x0c\x47\x2d\xe0\x04\xaf\x17\x34\x06\x6b\x4d\x71\x84\xb7\xa7\xfd\xfa\xd5\x37\xaf\xc1\xf2\xfa\xfd\xe5\xf5\xf2\xef\x97\x84\xd0\x8b\x1f\xc1\xc5\xf2\xa7\xf3\xcf\x57\xb7\x72\x6b\x3f\x2d\x6f\xff\xde\x8b\xf5\x7f\xef\x56\x7f\x05\xef\x3e\x5e\x5d\x9d\xdf\x2e\xcd\xbf\xab\x9e\xe0\x9a\x36\xa8\xaa\xf1\xdf\x46\x4a\xbe\x31\x04\x28\x89\xb9\x41\x6b\x4c\x50\x33\x91\x25\x1e\xb8\x01\x01\xfe\xc4\x05\xda\x45\x48\xd3\x00\x9e\x82\x3a\x7b\x46\xee\x22\xad\xfd\xf9\x87\x1f\xdc\xdd\x6e\x10\xaf\x19\xee\x84\x26\xbc\xdb\xe5\xaf\xb7\xc3\xcf\x02\x8b\x16\x4d\x0d\x98\x9f\xbb\x7e\xd5\xe2\x7a\xfc\xfd\xf6\xf2\xfa\xb7\xcb\xeb\xdb\xef\xbe\x77\xdb\xdc\xe2\xa6\x41\x64\x0e\x4a\x52\xad\xd5\x45\x1c\xea\x34\xd4\x38\xd2\x5c\xcf\xc8\x48\x28\xc3\x92\x1d\x9b\x40\x68\xab\x89\x63\xa0\x5a\xc0\x3b\x54\xe3\x35\xae\x81\x80\xab\x16\x8d\x04\xb3\x7a\x02\x90\x00\xb9\x1e\x31\x2a\xa1\xed\x49\x28\x84\xc0\x9d\xb5\xc3\x63\x6b\xdf\xbf\x7d\x5b\x44\x21\x69\xa1\x93\x97\x35\x27\xdc\xd4\x41\x30\x0c\xb3\x1a\x77\x54\x4e\xf1\x75\x08\xf4\xc2\x62\xe2\x33\x47\x4c\x52\xc2\x0e\x76\x1c\x0c\x4b\xc6\x47\x2d\x17\xd9\x70\xb9\xa6\xa7\xda\xf5\x71\xc3\xf2\xea\xa8\x50\x6b\x15\xaa\x94\x52\x05\x75\x12\xb2\x18\x97\xd3\x0c\x60\x62\x78\x3d\xa0\xd7\x09\xf8\x32\xcd\x33\xc1\xbf\x28\x59\x75\x9d\x12\x2c\x5b\xbc\xd9\x22\x06\x5a\xf4\x80\x5a\x00\x57\x5c\x30\xa8\xcc\x33\xc8\x68\x4f\x1a\x00\x41\x4b\x37\xb8\x86\x2d\xe8\x09\x16\x83\xa5\x35\x34\x04\x20\x69\xb4\x62\x0a\x48\xb0\xeb\x5e\x50\xdc\x94\x2a\xa4\x61\x52\x0f\x53\x03\x3f\x7e\xfc\x78\xe5\x12\x2c\xea\x68\x85\x1b\xae\x21\xfe\xf1\xe9\xe3\xf5\xb1\x49\xaa\x90\xda\x35\x65\x74\x5d\x5e\x16\x75\xdd\x8b\xd2\xcb\x3b\xba\xdb\x61\x6d\x75\x6f\x10\x41\x6c\xd4\x42\xca\xcc\x56\xcb\xbe\x42\xc3\x77\x8e\xc9\xa6\x45\x8a\x4e\x6a\x89\xe7\x91\x88\xfa\x31\x4a\x25\x07\x52\x8a\x4f\x2d\x7a\x3b\x63\x26\x8c\x2f\x35\xf8\x16\xfa\x23\x48\x81\xae\x18\x24\xf5\x36\x4a\xd5\x92\x0e\xcd\xea\x7e\xbb\x83\x5c\x20\xf6\xed\x80\xb3\x43\x9c\xc3\x8d\x4d\xba\xe0\xea\xe3\xf5\x7b\x43\x97\x3b\xc4\x36\xc8\xac\x87\x45\x9b\xa6\xa9\x35\x6c\x39\x1a\x00\xd1\x97\xba\xed\x1b\x64\x4f\x29\x0e\xd8\x41\x86\x88\x48\xb1\xde\x04\xe1\x2c\x8f\x07\x31\x50\xb2\xb7\x28\x39\xd2\x87\xbd\xd8\x52\x56\xd9\xba\x21\x29\xa3\xe5\x54\x05\x62\xf3\xe2\x9c\xb2\x06\x13\xd8\xda\xe3\xb8\xbc\xbe\x8d\x30\x52\xae\x3f\x86\xd6\x95\x78\xea\xa2\xa2\xe3\x6d\x08\x5a\x20\xb3\xd4\xae\x09\xd8\x40\x61\x13\x8e\x96\x18\x8a\x3b\xd5\x2c\x2b\x4d\x85\x96\xab\xa2\xa8\xf2\xb5\x0f\xc8\xb7\x70\x04\x1a\xe8\x31\x00\x70\x57\x78\x84\xf5\x16\x3e\x40\x0b\x56\x7b\x92\x13\xc1\x3e\x84\xc8\x73\xe2\x25\x9c\xae\x5a\x6b\x6b\xbe\x7a\xf1\xa3\xa0\xce\xc2\xac\x4f\x24\xb0\xce\x07\xb9\x8f\xc5\x53\x5a\x72\xb5\x98\xdc\x5b\x56\x55\x4b\xeb\xc1\xa0\x56\xe3\xd4\x81\x82\x81\x1d\xa2\x22\xac\x82\xba\xf9\x50\x96\x95\x08\x31\x9b\xcd\x72\xfc\x65\x8b\xa8\x14\x49\x96\x30\x9f\x2d\x15\x53\x30\x6b\xdc\x22\xa3\x6b\x0d\xcc\x7f\xf9\x36\xbd\xcd\x9a\xb9\x81\xb7\x74\x72\xf6\x06\xa0\x71\x21\xcc\xb6\xbe\x95\xd3\xb3\xc0\xd2\x50\xab\x16\x92\x7b\xad\x9f\xd3\x50\xc3\xbe\x20\x22\x24\x5c\x12\xca\x65\x2d\xbd\x85\x05\x4c\x68\x20\xe7\x0d\x41\x1f\xa3\x58\x12\x8c\x18\x66\x1f\x46\x94\x71\x63\x0a\x70\x4c\x77\x03\x81\x55\x7a\xb3\xc2\x86\x16\xe3\x30\x16\x8a\x14\x17\xe3\xc6\x9e\x80\x13\x7f\xc2\xc6\x97\x2d\xb4\x1f\xd6\x12\x81\x0c\x3f\x18\xbf\x37\x63\x4d\xc8\xc9\x9f\xd2\xa4\xd0\xdd\xcc\xf1\xf8\x9e\xd6\xc7\x69\x54\xa7\xcd\xc4\xde\x00\xbe\x7f\xfb\x67\x0f\xb8\x85\x64\xd3\xbb\x26\x4a\xd4\x99\x9f\xcc\x9b\x9e\xdc\x13\xfa\x48\xbe\x55\xbe\x59\x83\x07\x63\x9b\xdf\x81\x79\x4e\x6f\x50\x8b\x8a\x81\x39\xfe\xdd\x37\x42\xd2\xc0\x70\x85\x09\x64\x4f\x36\xbc\x63\xe3\x87\x76\xd2\x9e\x36\xce\x9c\xed\x17\xae\x92\x63\x04\xc6\xad\xbc\xf4\xe8\x52\xe6\x5e\x1a\xc3\x96\xb5\xf3\x6b\x1b\x42\x97\xc9\xd4\x59\x60\x5b\x4c\xcf\x02\x3f\x40\x86\x21\xa9\x51\x51\xcb\x5c\x40\xd1\xbb\x2d\xab\x30\x37\x6c\x1a\xd4\x9c\x2d\xce\x76\xb4\xc1\x6b\x2c\xff\x57\x12\x1a\x6a\xce\x7c\xbe\x1c\x98\xa2\xd9\x83\x48\x34\x46\xb5\x66\xd4\xc8\x05\x63\xb9\x9b\x4f\x82\x4e\x91\x4a\xfd\xe9\xff\x8b\x7d\x3a\x88\x89\x6a\x94\x6b\x9e\x6d\x18\x55\x4f\x0a\x63\x5f\xc3\x50\x62\xed\x61\x1d\x8e\xf0\x2f\x62\x22\x5e\x72\xde\x67\x34\x93\xb2\x0f\x29\x41\x80\x32\xb0\xa3\x6c\x00\xe5\x3d\xe2\x2a\x6b\xf4\x2e\xa3\x91\x24\x5c\x5c\x25\x1d\xa2\x8f\x72\xca\xa8\xd4\x63\x2d\x17\x59\x5e\xa0\xaf\x58\xd7\xa5\xe0\xe4\x62\x14\x30\x84\x2f\x96\x73\x32\xd9\xe7\xb3\x52\x26\xcb\x71\x98\xbd\xb2\xb9\xf6\x4a\x6c\x69\x49\xb3\x72\xde\xaa\xf7\x2c\x67\x5b\xeb\x53\xca\xd6\x31\x9e\x56\xed\xec\xc5\xd4\x1a\x65\x5f\xae\x56\x68\x7b\xb0\xf5\x84\x10\x0e\xcf\x5d\xfa\x0c\x6a\x68\x49\x4f\x7b\x91\x41\x9b\xb6\xc1\x95\x28\xd3\xee\xcc\x22\xfb\xc2\xc8\x6c\xd8\xb1\x44\x52\x54\x86\xf0\x7e\xb7\x93\x76\xcd\xc1\x52\xa4\x50\x52\x94\xf2\xb1\x6f\xb0\x16\x86\xf6\x9f\xcd\x9b\xbe\x9d\x59\x6e\x64\xa6\x21\x07\x3d\xc3\xab\x7a\x0b\xc9\x46\x5a\x05\x19\xab\x26\x27\x47\x63\xe2\xd3\x37\xaa\x0d\xc2\x0f\xf3\x16\xf5\x3e\x12\xd0\x8f\x2e\x5a\xa1\x45\x37\xc0\xa4\xc8\x68\x3f\xb9\x60\x90\xca\xc3\x58\x1a\xe1\xc0\x68\xd5\x38\xc8\x7d\x25\xd1\x34\xd0\xa4\x2c\x3a\xaa\xd9\xc0\x05\x78\x87\x88\x40\x4c\x59\x0d\x43\x0f\x2a\x31\xc2\x05\x68\x90\x80\xb8\x05\x35\x25\x02\x62\x82\x18\x10\x5b\x28\x40\x0d\x09\x58\x21\xc0\xd0\x9b\x9e\xa3\x46\x86\x95\x76\x7d\x2b\x70\xd7\x22\x15\x7a\x0a\xb8\x9f\x8b\xaa\x96\x7d\x9c\xc8\x80\x28\x64\x4f\xcf\x8b\x94\x26\x6e\x2e\xdf\x32\xda\xc0\xb8\x41\x44\x0c\xe6\x38\xbb\x03\xf6\xef\x3d\x91\x71\x49\x6e\x1c\xa1\x9f\xae\x3e\x9e\xbb\x2d\x3e\xc0\x76\xd4\x98\x60\x32\xf2\x57\x9c\xb6\xbd\xac\x61\xe9\x10\x1b\x96\x06\x6e\x90\x67\xdf\xcb\xb6\x2d\x61\xa2\x30\x39\x6c\x21\x7b\x3a\x5b\x9c\x6d\x69\xcf\xda\xe1\x7f\x86\xcd\x61\xb0\x16\x94\x0d\xff\x80\xbc\x87\xed\xd9\xe2\x8c\x8a\x2d\x62\xb1\x16\xeb\x9e\x31\x44\xea\xc1\xb9\x94\x6b\xf4\x17\x4f\x32\xb5\x2d\xad\xe1\xb8\x00\x91\x19\x79\x59\xa4\x7d\xd2\x48\x3e\xec\x31\xe9\x58\x93\x40\xcc\xf4\x1d\x08\x74\x4b\xdb\x06\x93\x0d\x30\xa4\x32\x85\x61\x14\x8d\x07\x34\xab\xe1\x22\x04\x5b\x42\xad\x0e\xa5\x05\x64\xe6\xe4\xef\x66\x9c\x36\x67\xb9\x8b\xd7\x3a\x92\xb0\x73\xec\xad\xc1\xd8\x3a\xe2\xea\x5f\x40\x01\xc1\x7b\x46\x7b\x9d\x87\x7d\x84\x4f\x83\x47\x41\xd9\x06\x12\xfc\x3b\x02\x5b\xfa\x28\xab\x7f\x3e\x5f\x82\xcd\x00\xc5\x65\xca\x75\x8d\x5b\x81\x18\x07\xc3\xa8\xbc\xe5\x1f\x7e\xaa\x24\xe8\x49\xa3\x60\xe5\xae\xad\x2f\x3a\x4a\xa4\x87\x5d\x2b\x34\x9b\xa5\x52\x16\x58\xc7\xe8\xbf\x50\x2d\x54\xf2\xd6\xe4\x6d\xb5\x8e\xe1\xa1\x03\xec\x67\x7a\x41\x3a\xdb\xbb\x2f\xab\x9e\x94\x5b\x97\x5f\xea\xb6\xe7\x98\x92\x0f\xba\xe6\x51\xa9\x1e\xcb\x51\xdd\x42\x0e\x60\xdb\x4a\xaa\x31\xe1\x23\xa0\xdc\x66\x8f\x54\x90\x69\xab\xd2\x05\x94\x31\x8a\x29\x21\x16\x37\x24\x51\x66\xe2\xa5\x0c\x3c\xd7\xe1\xcc\x26\x24\x67\x73\xeb\xd9\xd4\x7a\x30\xfb\x54\xa8\x61\x06\x63\xce\xeb\x09\xb1\x5e\x32\x61\x9f\x8c\x6a\xc8\x94\x16\x51\x41\x0c\x8f\x2e\x32\x01\x8b\x43\x85\x47\xa6\x76\x28\x92\x98\x1e\x59\x79\x8e\xa4\xbc\xfa\xc2\x98\x68\x59\xd1\xe6\xc9\x9d\x83\x9d\x77\xe7\xc2\x0f\xff\x2a\x63\x81\x76\x88\x0c\x46\x41\x4b\x79\x10\x3e\xf4\xe2\x74\x23\xce\xaa\xdf\x9c\x2d\xce\xd6\x08\x8a\x9e\x0d\xf6\x09\x22\x5b\x48\x6a\xb4\x43\x44\x24\xcc\x0a\x86\xa4\x31\x63\x49\x3d\xd5\x12\xa1\x04\xc9\x82\x5d\x4e\xdb\x07\x19\xc8\xec\xc9\xf8\x8f\x6c\xb1\xd3\xde\xa2\x2a\xc6\x43\x72\xd2\x19\x71\x36\x01\xad\x9e\x92\xa5\x7b\x3d\x6b\xef\xe2\x94\x13\xd4\xea\x84\xca\xa4\x3c\x4c\x5a\x1e\x25\x2d\x0f\x92\x3a\xf1\x94\x7d\xa3\x22\xe5\xe1\x10\x2b\xb0\x90\x11\x3a\x61\xff\xc6\x9f\x9a\xd8\x24\x3a\xa4\xc5\xc8\x68\x0b\x9b\xa3\xfc\x96\x25\x07\x54\x13\x19\x45\xa7\xaa\xd8\x64\x61\x53\xdb\x22\x3b\x7f\x39\x77\xbb\xa5\xc8\x60\xe5\x72\x2c\xbc\x31\x67\x46\x3a\xae\xa9\x1a\xb2\xd5\x62\x6c\xc8\xe3\x82\x2f\xc6\xd1\x5b\x6d\xe7\x47\xef\xf5\x34\x32\xc4\x01\x7d\x4e\xcc\xf4\x8c\xfe\xa7\xcd\x39\x60\x00\xf6\x96\x15\x8f\x40\x77\x9c\xdf\xc0\xb1\x8b\xd2\x1d\x54\xad\x6a\x8a\x9f\x56\xd5\x6f\x4f\xf3\x80\xbd\x78\xf3\xe3\x9b\x9a\xd3\xed\x3b\xec\x17\x1f\xaa\xbd\x39\x63\xa7\x51\x2e\x4d\xac\x84\xb5\x33\x71\x16\x74\x17\x7c\xda\x8a\xe3\xab\xf8\x77\x2a\x3b\x57\x96\x5a\xd7\xa9\x3c\x5d\xd7\x92\xb4\x01\x2a\x0d\x97\xb0\x05\x0e\x32\x05\x42\xcb\xbd\x20\xda\x18\x98\x0c\x73\x16\x43\x32\x11\xe2\x5b\x03\xc6\x18\xf0\xdc\x11\x99\x36\xb4\x2c\xcd\x99\x1c\xb2\x82\x4f\x97\xb1\xfb\x4a\x7a\x2f\x1d\x1d\xd1\xbe\xa6\xc3\x1c\x4c\xa0\x80\xcb\xf5\x6f\xb1\xfa\x2d\xd6\xbe\xc5\xca\x37\xa6\x7b\x15\x11\x86\xe1\xf7\x29\xf4\x9e\xc0\x98\x2f\xd0\x71\xe1\xf7\xd5\xf2\x06\xaf\x5c\xdb\xdb\x18\x05\x5a\x3f\x32\xae\x67\x6a\xff\x17\x73\x2d\x80\xee\x55\x4b\x1f\x1d\x08\xe5\x3a\x6b\x1a\x95\x36\x1a\xe3\x50\x2f\xd4\x15\x35\xe9\xa2\xf1\x80\xdd\x5d\x4e\x09\x3e\xbb\xdc\x5b\x9e\x88\x7c\x9e\x1f\x5c\xe6\x53\xbb\xfc\x13\x61\x1e\xb3\xf7\xfb\x92\xb6\xc1\x2b\x27\x6d\x1b\xe3\xb4\x09\x7b\x49\x78\x9f\x54\xb0\x5f\xd1\x9f\x8a\xfc\xe3\xdf\xd5\x61\x51\xad\xf5\xb0\xd8\xaa\xa1\xe9\x53\x0d\x3a\x3d\x10\x0b\x9a\x69\xa3\x22\x97\x64\x7b\xbe\xe6\xb3\xff\xb2\x5a\x70\xae\x27\xe9\x84\x52\x01\x5b\x25\x12\x79\x80\x98\x24\x50\x82\x1e\xff\xf2\xb6\x6a\xe0\x53\x88\x93\xc1\x52\x7d\x29\x63\xa9\xbc\x2f\x05\x9f\xe8\x2e\x89\x85\xb8\xc0\x3b\xc9\x6e\x8f\x94\xdd\x57\x3b\x4a\xc4\x76\xc4\x0e\x43\xea\x51\xf0\xb1\xcf\x10\x3e\x0c\x18\x58\x7f\x33\x82\x21\x02\xad\x6c\x0f\x4c\x99\xac\xfd\xcd\x6c\xdf\xf7\x6f\xdf\xbe\xb6\x81\xa3\xdb\xed\x59\x0d\x91\x42\xa7\x74\xc3\x0a\x38\x41\x45\xd1\x80\x69\x18\xc6\x08\x1a\x8e\x54\x6e\x28\x59\x90\x8b\x0a\xc5\x03\x1b\x99\xa1\x4f\xc0\xf3\x0d\x87\xf1\x9a\x68\xc3\x31\xfb\xa6\x5a\x63\xd4\x36\x5e\xc8\x77\x0a\xfa\x0a\x04\x77\xa9\xc5\x1e\x81\x4c\x30\x3a\xca\xb1\xd1\xe3\x15\x7c\x04\x76\x1a\x37\x0d\x46\x2a\xb4\x22\xbd\x06\xf1\xb0\x78\xaf\x6e\xb1\x78\xc7\xb0\x5b\xac\x17\x69\xb9\x85\x2b\xd4\xa6\x66\x3d\xae\x0c\xed\x2a\x29\x41\x63\x70\xfa\xbc\x6d\x9c\x99\x31\xaf\x5a\x04\xd7\xf1\xf6\xb3\x98\x1d\x14\xdb\x24\xeb\xa5\x6b\x58\x23\x69\x89\xf9\x95\x8a\xd4\xde\x85\x48\x05\x55\x78\xf3\x3d\xf9\x84\x58\x3d\x60\x26\x7a\x5d\x40\x3f\x15\x14\xb6\x08\x72\x54\x35\x3d\x83\x01\x07\x69\xeb\x23\x08\x66\x3b\x0a\x6c\x0f\x4b\xd9\x60\x58\x72\x69\x44\xb2\x65\x55\x0a\xcf\x11\x0a\x5e\x77\x46\x54\xa4\x70\x1d\xbe\x77\xce\xf1\x4f\xd2\x20\x39\x5e\x97\x11\xa7\x31\x7b\x0c\x9a\x9e\x6f\x60\x3d\xe7\xe2\x16\x1a\x6b\xe4\x84\x29\x86\x35\xf2\x46\x0a\x67\x5f\xc3\xcb\x2e\x62\x98\xf7\x10\x62\xbd\xa4\xd6\xc6\x8b\x4c\x14\xae\x94\xdd\x72\x38\x7f\xb7\xcd\xfd\x56\xc3\x6a\x2d\x4a\x45\xa9\xb6\x17\x85\xf4\x55\xd2\x97\x4b\xf7\x7b\x74\xba\x70\xd9\xe3\x88\xd6\xed\x3f\x30\x83\x2a\x27\xff\xd3\x20\x27\xc2\x04\xdf\xe8\x4a\x89\x2d\x02\x3d\xc1\xff\xee\x91\x4e\xce\x03\x29\x59\x38\x58\xab\x23\xbb\x35\xa3\x5c\xe5\x02\xff\x85\xd9\xe8\x90\xf9\xbe\xd7\xf0\xad\xb2\x25\xd3\xe9\x32\x3f\x46\xf0\x45\xe3\x38\x33\x49\xe3\x64\xf4\x82\xd7\x5b\xb4\x83\xb6\x04\x4f\x9a\x30\x1a\x54\x4d\xf6\xae\xa4\x55\xbd\x2e\xc3\x90\xe7\x4f\xf2\xce\x1d\xe6\x0d\x56\x3a\x7b\xb4\x37\x84\x7e\xc9\xbc\xa1\x47\x85\xff\x84\xad\xf1\xf5\xf7\x21\x45\x20\x8b\x78\x9e\x4b\x90\x95\x6c\xe5\x54\x41\xc8\x80\x7e\x92\xe4\xa3\x87\x31\xfd\x45\x83\x87\x9e\x92\x2f\x2f\x8d\xdc\x97\x78\x54\x81\x94\xd7\x9d\x47\x18\xd3\x30\x72\x84\x65\xb7\xf4\x42\xe4\x75\x79\x73\xae\x9d\x73\xe5\xc0\x77\xa8\xc6\xb0\xc5\xbf\xa3\x06\x3c\x20\x26\x6f\x67\xa2\x6b\x00\x75\x90\x69\x4d\x99\x44\x89\x51\x4a\x36\x5b\xfd\x1c\xc9\x15\x92\x4a\xca\x53\x4f\x4a\x91\x94\xe5\x9e\xaf\x8e\x0f\x7d\xac\xe2\xb8\x78\x08\x2f\xab\xa6\x38\xc7\x1b\x82\x82\xa1\x07\x51\xf4\xb8\x73\x1a\xf5\x4b\xc3\x6e\xd3\xf6\x75\xdc\xbf\xf3\x9a\x5d\xe3\x2f\x95\xde\x7a\xc7\x5b\x32\x6e\x48\xec\x9b\xfd\x1d\x91\x07\xcc\x28\xd9\xf9\xa7\xde\xc7\xd3\x38\x74\xd7\x51\xa2\x6a\x89\x62\x55\x3f\xd2\x17\x0a\x5a\x9f\xbe\x37\x3d\x92\xe7\x28\xa1\xdb\x7c\x4c\x2f\x74\x2d\x24\x04\x35\x15\x17\x90\x89\x7c\xb2\xdd\x80\x22\xe2\x64\xdc\x63\xa0\xf7\x28\x1f\x63\xf0\x5d\x94\x94\xdb\x6b\x26\xa4\x3c\xc4\x70\x1f\xc7\x05\xed\x70\x5d\x40\x5c\x91\x02\xad\x18\x18\x17\x0c\x0a\xb4\xc1\x75\xe5\x22\xf8\xb1\x09\x32\xd8\xe6\x1b\x86\x38\xaf\x6a\xda\x8f\x7b\xe9\x79\x3d\x77\x0c\xd1\x0e\x11\x07\x24\x0a\x67\xb7\x67\x7b\x54\xa1\x23\x35\x10\x18\x5e\x63\x55\xc2\x69\xc3\x46\x40\xed\x56\xed\x4d\x56\xa0\x39\x4f\x34\x7b\x46\x64\x0f\xa7\x55\x5d\x17\x53\x7e\x14\xcc\x2a\xb5\x75\xfe\x6e\x96\xe7\x91\xcc\xd6\x5b\x57\x59\x68\xb9\x57\xe0\x55\x5a\xe0\xa5\x2e\x56\xd0\x43\xa9\x37\x69\x21\xde\xa3\xa7\x11\x7c\x60\x93\x28\x90\xa6\xe7\x11\xd0\xd0\x77\x7c\xf4\x86\x48\x03\xd7\x32\x81\x10\xa1\x6f\x2b\xfb\x1c\xd2\x7e\xb4\x91\x72\x67\xd1\x42\x9a\xf3\x14\x2d\x50\x8b\x6a\xdc\xa4\xd8\x91\xa3\xf4\x29\x35\xad\x0f\x59\x54\x2d\x3d\xb8\xd6\x30\x5b\x1f\xe8\x2a\xba\x6c\x16\x36\x22\x60\xb5\xf7\xe3\x8b\x55\x5f\xa9\x2b\x81\x6a\xec\x45\xa3\x5e\xac\xa3\xa1\x5e\x8d\xd9\xf0\x65\x20\x0f\x59\x60\xe9\x7c\xb1\xce\x8c\x02\xff\xcb\x84\xe1\x7e\x29\xcb\x0b\x95\x65\xa2\x5c\x7b\x26\x05\xe5\x1a\x31\x65\xd7\xb4\x44\x83\x54\x51\x3a\x30\xfa\x69\xbc\x95\x60\xd8\x83\x38\x73\x4c\x38\x07\xf1\x89\x85\x9f\x11\x65\xc7\x36\x72\x23\xd5\x19\x33\xc6\xee\x3b\xab\x38\xc3\xb2\x93\xcd\xf1\xeb\x0c\x73\xa5\xab\x35\x9e\x97\x3f\x1d\x33\xf0\x0e\x05\x04\x8c\x71\x4c\x72\xca\xb2\xb9\x5b\x22\x71\x9c\x8c\xec\x2c\x4f\x85\xf4\x64\xb2\xf3\xe3\xea\x38\xa7\xa9\xb2\x72\x7e\x8f\x92\x86\x08\xda\x01\xaa\xb5\xbc\x24\x22\x36\xc3\x83\xd8\xad\xb0\xd4\x61\xa6\x3f\x6b\xae\x66\xec\xd3\xf6\x0f\xad\xe6\x6b\xae\xa6\x2a\x08\x8b\x68\x4e\xc4\xe4\x57\x83\x07\xa1\x58\x5c\xc7\x42\xa4\x4f\xa1\xeb\x21\x36\xf8\x01\x11\x13\xf3\x48\x33\xb1\x44\x39\x75\x09\x44\x61\x29\x50\x29\x27\x28\xd7\x69\x36\x98\x65\x03\xbf\x78\xb0\x41\x6d\xd1\xcf\xda\xc5\x1d\x76\x49\x6c\x11\x30\x2e\xaf\x8a\x6a\xa5\x77\x65\x4a\xf2\x9e\xee\x4c\x8d\xdb\x93\x13\x3a\x0a\xf6\xa9\xe4\x50\x0d\xae\x29\xa9\xe6\x6a\x5b\x8a\xcf\xf1\x44\xec\x7b\x33\x50\x7f\xdc\x9e\x34\x8b\xe7\x91\x62\x2d\x7d\x35\xa2\x50\xae\x1c\x10\x0c\xd6\xf7\x86\x30\xf4\x6f\x36\xf3\x2a\x45\xbc\x7a\x92\x67\x35\x73\xc4\xa2\x70\x8f\xcf\xc5\x59\xad\x58\xa6\x7e\x95\xbb\x6a\x0e\xd2\x44\xac\x60\x44\x9a\x6a\x3a\x67\x13\x2b\x3e\x74\x12\x93\x87\x1e\xc2\x39\x50\xe9\x8e\x6e\xf7\x5e\x8a\x6c\xc4\xda\xdf\x87\xd5\xa1\x88\x43\x34\xe0\x88\xbd\x87\x0a\x0c\xe6\x67\xf7\x3c\xed\x5d\x30\x6d\xbf\xb4\xd9\xda\xe6\x93\x3b\x75\xca\x15\x3a\xfe\x5d\xaf\x5e\x34\xb4\x30\x57\x94\x94\x99\x89\x2b\x61\x3d\x31\x69\xa3\x47\x6a\x80\xfc\xcf\xbc\x5f\x09\xc8\xef\xc7\x08\x9f\x7f\xa1\xec\x3e\x97\xbd\x7a\x4b\x5a\xaa\x50\x83\xb3\x16\x2f\x22\x3a\x33\x86\xcc\xc9\xea\x38\xe3\xae\x43\xb0\xd1\x6e\xa0\x34\x99\xce\x81\x0f\x50\x40\x66\xb6\x3e\x6d\x12\x41\x81\x36\x94\x3d\xc5\x63\x0a\x27\x11\x75\x66\x9e\x7b\xd9\xf9\xfb\x57\x7a\x3a\x68\xa7\x2d\xdb\x4c\x53\x49\x65\xd7\x8a\x9d\xe2\x8a\x03\x3f\xfd\x50\xe6\x97\x96\xa7\xa6\x4b\xe5\x4d\xf2\x5a\xb0\x72\x7a\xb0\xa6\x72\x10\x69\x58\xf8\xb3\xb2\x25\x82\xf3\x52\x32\x26\x43\x2c\x2a\x67\xf1\xd2\x15\xba\xcf\x28\xc0\x4b\x14\x89\x05\x86\x78\xc4\xa0\xcf\x40\x1f\x54\xe7\x56\xd3\x5d\xd7\x22\x81\xaa\xc8\x95\x87\xf3\x86\xe0\x3c\xbc\x6b\x59\x16\xc1\xa7\x6b\x39\x0d\xb3\x6c\x28\x4c\xd7\xe0\x8e\x2a\x9c\x60\x81\x4d\x39\x74\xaa\xd4\x72\xad\x6e\x3f\x8d\x81\xf8\x40\xfa\x5c\x98\x0f\x6b\x80\xdc\xee\xbc\x14\x94\x9f\x2a\xb2\xbb\x9d\xcd\x56\x39\x1d\xfb\xd0\x3e\xb0\xbc\xef\xb0\xb4\x65\x86\x76\xf4\x21\x05\x1e\xa6\xb7\xac\x09\x72\xaf\xf2\x7b\x06\x18\x93\x4a\x2f\xa2\xea\x23\x1d\x09\x76\x79\xfa\x30\x89\xa6\x71\xff\x08\x92\x49\x57\x6b\x9f\xa8\x48\xc5\xcf\xb9\x97\x6a\xb1\xf2\x0a\xab\x62\x3d\x96\xb2\x9c\x2d\x0d\xa7\x4d\xa6\xe4\x87\xca\x98\x68\xc1\x87\x9a\xb6\x94\xdd\x45\x3e\x44\xd4\x72\xb4\x62\xe2\x88\xd5\x36\xee\xd6\x1e\x48\xa0\x0a\xb7\x58\xdd\x6a\xf8\x17\x37\xe7\x07\x3f\xd2\xca\x4e\xac\x71\x9d\x0c\x72\x0c\xbf\xbf\x54\x68\x23\x20\xc6\x01\x6c\x22\xdd\x19\x35\x1a\x7c\x46\x3b\x88\xdb\xf9\x0c\x5f\xa1\x67\xe0\xba\x86\xcf\x8b\xa9\xee\xed\x23\xc8\xf5\x2a\x0c\x82\xc8\x9f\xf7\xf4\x0b\x62\xa9\xe2\x93\x3a\x05\x3b\x5a\xdf\xc3\x0e\x57\xf2\x9d\x3f\x73\x91\xd6\xd1\x33\x59\x45\x7b\x81\xbe\xd8\x76\x5b\xa4\xfe\x23\x4f\x66\x6a\x15\x23\xf3\xf9\x4a\x7a\xca\x8c\xa4\x41\x5d\x4b\x9f\x32\x07\xba\x9f\xa5\xae\x62\x6a\x2b\x69\xa7\xa6\x56\xde\x5e\x2c\xb5\x0b\x95\xd9\x8c\xc8\x36\x44\xa0\xf3\x4a\xc0\xdd\x58\xeb\x6f\x76\x8f\xad\xbf\xfc\x76\x4f\x8b\xbc\x07\xc7\x45\x90\x93\x2b\x31\x36\x95\x5e\xab\x7d\x1b\xce\x37\x7a\x64\x75\xf3\x33\xa3\x35\xe2\x1c\x93\x0d\x58\x32\x46\xa5\xd6\x91\xb7\x21\x0a\xaa\x02\xf0\x00\x0d\x3f\x73\xd0\xf4\x6c\x00\xea\x46\x78\x8f\xac\xa7\x0f\x95\xc4\x38\x81\xb4\x28\x3e\xf9\xeb\x9e\x1f\x0a\xf4\x8e\x7b\x3f\xe7\x87\xe5\xc5\xe5\xe7\x0f\x01\xd0\x1a\x0a\xcb\xd7\x99\x89\x24\x66\x15\x84\xbf\x32\x2f\x6a\x4e\xdc\xa0\x8e\x96\xde\x42\xd1\x20\xc0\x50\x47\x39\x16\x94\x3d\x79\xdb\x3b\x7c\xf8\x9a\x2f\x88\x65\x02\xbf\xae\x10\xca\x3c\x29\x36\xae\xa2\x60\xbd\xbc\x29\x62\x4d\xd9\xbd\xd5\xea\xcc\xbd\x12\x5e\x69\xa5\x67\xfa\x26\xe2\xd9\x5f\xe1\xad\x32\xff\x08\x5d\xe1\xa1\xb9\xc2\x4b\x21\x9c\x53\xed\xf2\xda\xbe\x9c\x35\x2d\x01\xca\x25\xaf\x04\x2f\x39\xe4\x3e\x02\xbe\x94\x3d\x24\x3b\x7c\xe6\xc5\x7c\xcf\x35\x84\xdc\xdb\xa0\x9f\x65\xba\x96\x5d\x7b\x60\xad\xf5\x74\xc7\xde\xdc\xb5\xc3\x1e\xf8\xa9\xaf\x1f\xf8\x84\x37\x04\xb6\x5a\xaa\x39\x82\x8e\x23\xf9\x32\x22\x97\x00\x5c\x5d\xf9\x0b\x19\x02\x35\x6c\xeb\xbe\x1d\x58\x0d\xac\xd0\x16\x93\x46\x3d\xe8\x5b\x23\x12\xdc\x84\xa1\x70\x0f\xdd\x6f\x57\xb6\x29\xf0\xec\x21\x96\x74\xf9\xef\x9d\xc0\x3b\xd4\x13\xf3\x52\x89\x6f\x1d\xb9\x61\xbe\x8b\x61\x06\x69\x16\x1e\x2f\xd6\x7c\xde\xfd\x18\x59\x5a\x1b\xa9\x41\xad\x60\x56\x46\x68\x90\x72\x29\xa1\x11\x4a\xe4\x84\x05\x9a\x4b\xf9\xda\xa3\x34\x2b\x1d\x1d\x90\x7e\xa2\x69\xdc\x8d\xd4\xbd\x5d\xb3\x0d\x3a\x69\xe3\x7c\xab\xfa\x1d\xa8\xd3\xc8\x35\x4e\x09\x64\xff\xee\x57\xa8\xda\x21\xc1\x70\xfd\x07\xb9\xa6\xd6\x04\x60\x2c\x17\x61\x9f\x63\x3d\x73\xcd\xde\xa3\xa7\xb1\xe9\x64\xbb\x11\xf7\x24\x1d\x95\x4b\xbe\x5b\xe4\xf1\x21\xc3\xf5\xac\xf9\x14\x0a\x86\x1c\xa8\x26\x38\x6f\x1f\xf7\x61\x27\x1f\x75\x26\xb4\x76\x62\x3a\x3c\x59\xbe\xfa\x90\x68\x43\xe0\x16\xb8\xd9\xec\x3d\x23\x5e\xfe\x7a\x17\x27\x89\x8f\xa9\x2f\xe5\xfb\xc0\x4a\x53\x6a\x2d\xed\xb8\x04\xf2\x39\x6b\xb1\xc5\xac\x79\xd3\x41\x26\x9e\x00\x26\x02\x6d\x98\xbe\xcb\x87\x3a\x6f\xee\x8c\xde\x02\x0e\x35\xa7\xec\xe6\xf8\x9b\xf8\xe2\x36\xd0\x3e\x9e\x9e\x9a\x74\x81\x8d\xa4\x01\x5f\x72\xdf\x3f\xf3\xf8\xa5\xf2\xd6\xae\x43\x1d\x77\x26\xf2\x11\xa5\xe9\x7d\x3f\x3d\x22\x73\x0d\xba\x24\x05\x6f\xbb\x53\x51\xe8\xaf\xa0\x3a\xdc\xa8\x72\x20\xb6\x13\xc1\xa4\xf1\x25\x04\x27\xa2\xed\x60\x87\x25\x2b\xae\xaf\x09\x62\x71\x02\xd8\x0b\x8a\x08\xa3\x6d\x3b\xe6\xec\x02\x98\x07\xcc\xf1\xca\xbd\x08\x29\x6c\xc7\x09\x82\x07\xb3\xf2\x56\xa0\x6b\xe9\x93\x73\xc0\xd4\x4c\xcf\x7d\x14\xc1\xf9\xc4\xd0\xc6\xbf\xdf\xc4\x7c\x6a\xd0\x20\x0a\x9c\xb3\x9c\x13\x56\x47\x99\xe0\x95\xa0\xc9\xfb\x16\x23\xb7\x3c\x8d\xd8\x34\xb8\xff\x29\xe1\x38\x83\x67\x5f\xfb\x1e\xf1\x65\x81\x73\x03\x7d\xee\xf4\x5e\xc4\xad\x06\x81\x39\xac\x78\x5b\x2e\x83\x24\xc2\xe9\x6c\x9b\x24\x49\x0f\xc4\x50\x5a\x54\x0a\x8c\x64\x98\x32\x30\xad\x5e\x62\xf8\xaa\xc7\xc5\x69\xa5\x49\xf0\xe6\xca\x28\x32\x18\xaa\x29\x6b\x74\xb5\xae\x7a\xc5\xd7\x7a\x87\xc5\xd7\x15\x2a\x21\xf2\x47\x79\x5c\xa5\xf4\x8d\x35\x6b\xc0\x31\xaa\x8f\x3e\xa9\xb2\x38\xd6\x7b\x28\x8b\xf4\x33\x28\x8b\xd4\xeb\x27\x31\xae\xfa\x63\x3c\x7a\x22\xa9\xe9\x8a\x6e\x30\x49\x5d\x60\x29\x43\xd1\x83\xa9\x22\x35\x54\x3b\x80\x46\xa9\x48\x7e\xf9\x5a\xa6\x63\xb2\x1e\xdc\x81\x5a\x31\xfa\xc8\xcd\x03\x3c\x93\x88\xcd\xbd\xa5\x30\xe2\x9f\xc4\xf4\x96\xc3\xfe\xca\xa1\xad\xb2\xa5\x3b\x7a\x68\xcb\x9e\x7a\x41\xfa\xd6\x01\x3f\x6d\x68\x6b\xe0\x8b\x3f\x6d\x28\xe5\x08\x5c\xd0\x47\x32\xfc\xf3\xd3\x2f\x57\x80\xa3\x5a\x1a\xe2\x67\xc3\x8f\x67\x03\xb7\xa0\x2f\xa8\xee\x05\x6a\xc0\xe3\x16\x91\xc1\x70\xe7\x60\x87\x8d\xbd\x8e\x39\x50\xa6\x07\x58\xc1\xfa\xfe\xd5\xab\x8b\x9b\x8f\x3f\xeb\x6d\xbf\xfc\x09\x2c\x7f\xbd\xfc\x74\xfb\x09\xdc\xc1\xba\xad\x36\x0c\x12\x71\xf7\xb7\x0c\x04\x43\x9c\xf6\xac\x46\x79\xa0\x41\xa1\xe7\x00\x54\x22\x3b\x0b\xd5\x75\xc9\x6f\xfa\xb5\xde\xfc\xe7\xe9\xfd\xf7\x19\x38\xf9\x38\xf5\x0c\x8c\xba\xcf\x64\x06\xc8\x5c\x55\x9a\x06\x9b\x74\x5b\x12\x46\xf3\x49\x12\xc0\x7a\x4a\x28\x05\x12\x3e\x21\x93\x82\xcc\x4f\xcb\x3d\xc0\x9a\x87\x32\xee\x7a\x1e\x6a\x6e\x85\xc2\x6b\xaf\x8a\x21\xf5\x7d\x44\x59\xf8\xfc\x74\xe3\x27\xe2\x4b\xa0\x67\x56\x28\x38\x48\x58\x00\x38\x9e\x6d\x2b\x82\xd5\x47\x9b\x0a\x60\xa5\x44\xcc\xc2\xcd\xed\x64\xaa\x4e\xbc\x08\x5e\x97\x0a\x97\xc1\xaa\xe2\xbd\x2c\xac\x74\x38\x53\x10\xb1\xe2\x95\x39\x58\xab\x1c\x23\x05\x1a\xa4\xb8\x53\x80\x32\x59\x9a\xfb\x38\xcb\x9f\x3a\xf1\x90\xfc\xec\x47\x6d\xe7\x01\xe7\x76\x57\x07\x6c\x52\x9f\xb3\xeb\x1d\x18\xf0\x59\x40\x65\xa3\x65\x41\xa6\xe5\xf9\xbf\x00\x00\x00\xff\xff\x91\xfd\x34\xf0\xce\x94\x00\x00")

func migrations20170523183416_initSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrations20170523183416_initSql,
		"migrations/20170523183416_init.sql",
	)
}

func migrations20170523183416_initSql() (*asset, error) {
	bytes, err := migrations20170523183416_initSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/20170523183416_init.sql", size: 38094, mode: os.FileMode(420), modTime: time.Unix(1539004813, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrations20171108110099_rbacSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x91\x4b\x6b\x02\x31\x14\x85\xf7\xf9\x15\x97\x6c\x54\x9a\x01\xc7\xc9\xb4\x33\x48\x17\x82\x29\x15\x7c\x50\x1f\xed\xd2\xc4\xe4\xaa\xa1\xf3\x62\x32\xd5\xfe\xfc\x92\x8a\x6d\x41\x0a\x2e\xda\x55\x0e\xe1\x1e\xee\xb9\xe7\x0b\x02\xb8\xd9\x95\xa5\x43\x58\x55\x24\x08\x60\xf1\x34\x06\x5b\x80\x43\xdd\xd8\xb2\x80\xd6\xaa\x6a\x81\x75\x80\xef\xa8\xdf\x1a\x34\x70\xdc\x63\x01\xcd\xde\x3a\xc8\xed\xae\x56\x9f\x43\xd6\x81\xaa\xaa\xcc\xa2\x21\x64\x34\x5d\x88\xf9\x12\x46\xd3\xe5\x0c\xa4\xd2\xd9\xba\x2e\x33\x94\xd0\x96\xd6\x48\x26\x0b\x95\xa3\x64\xd2\xa0\xd3\xb5\xad\xbc\x59\x32\xa9\x6b\x54\x0d\x9a\xb5\x6a\x64\x07\x9e\x07\xe3\x95\x58\x40\x9b\x86\xdb\x30\x56\x5c\xa7\x86\xdf\xa5\x49\x2f\xea\x52\x46\x95\xc9\x6d\x41\x19\x1d\xf8\xd7\xba\xc6\xaf\x3f\x20\xf8\x0d\x94\x85\x71\x94\x76\xbb\x3c\x09\xa3\x94\xf7\x3a\xfd\xbf\x0b\x12\x29\x0c\x79\xaa\x12\xa3\x39\xe7\x1b\x8d\x94\xd1\x53\x1b\xf6\xe0\xb5\x38\xeb\xff\xce\xc1\xe3\x38\x0e\xc3\x6d\x82\xd1\x6d\xcf\xe0\x26\xa5\x8c\xe6\xaa\x50\x3b\xac\x29\xa3\x93\x93\xfa\x25\x03\xf9\xa6\x3c\x2c\x8f\xc5\x99\xf3\x17\x64\xff\x79\x15\xe6\xba\xcc\x32\x34\xb0\x51\xfa\x95\x10\x32\x14\x63\xb1\x14\xf0\x30\x9f\x4d\x7e\x9e\xf6\xf2\x28\xe6\x02\xfc\x7d\x70\x0f\x97\x1c\xfb\xd7\xf9\x2e\x6a\xbf\xd2\x77\x51\x53\x9f\x7c\x04\x00\x00\xff\xff\x17\x98\xb9\x77\xe4\x02\x00\x00")

func migrations20171108110099_rbacSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrations20171108110099_rbacSql,
		"migrations/20171108110099_rbac.sql",
	)
}

func migrations20171108110099_rbacSql() (*asset, error) {
	bytes, err := migrations20171108110099_rbacSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/20171108110099_rbac.sql", size: 740, mode: os.FileMode(420), modTime: time.Unix(1539004813, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrations20171122172200_indexesSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x94\xcd\x72\xe2\x3a\x10\x85\xd7\xf1\x53\x9c\x5d\x4c\x5d\x53\x15\xc8\x7f\x65\xe5\x5c\x7c\xef\x50\x43\x08\x63\xcc\x54\x58\x19\x61\x37\xa0\xc4\x48\x2e\x49\x0e\xe1\xed\xa7\x64\x93\x1f\x1c\x2d\x66\x47\x75\x7f\x3a\x7d\x50\x5b\xa7\xdb\xc5\x3f\x6b\x29\x35\x61\x56\x7a\xdd\x2e\xa6\xbf\x46\xe0\x02\x9a\x32\xc3\xa5\xc0\xe9\xac\x3c\x05\xd7\xa0\x37\xca\x2a\x43\x39\x76\x1b\x12\x30\x1b\xae\xb1\xe5\x6b\xc5\x6a\x88\x6b\xb0\xb2\x2c\x38\xe5\x9e\x95\x30\x1b\xc2\x84\x29\xc3\xeb\xe6\x92\x0a\xb9\x83\x20\xca\x35\x8c\x84\xa2\xad\x7c\xa5\x9a\x29\x15\xdf\x32\xb5\xc7\x0b\xed\xa1\xb9\xc8\x08\xdc\x9c\x6a\x08\x69\x50\x69\x5a\x55\x05\x98\xd8\xef\xd8\xde\x0b\x47\x49\x14\x23\x09\xef\x47\x11\x16\x9a\xaf\x05\x2b\x16\x18\xc4\x8f\x13\x4c\xe2\xe1\x43\x18\xcf\xf1\x33\x9a\x07\x08\x07\x83\xaf\x05\x9f\xe7\x01\x72\x66\x28\x80\x60\x5b\xea\xdc\x39\xcc\xed\x78\x51\x60\x49\x58\xee\x31\x8f\xc2\x18\x4c\xe4\x96\x10\xd0\xd5\xb2\x7c\xa7\x28\xb7\xfd\x66\xae\xdb\xcb\x24\x8c\x93\x61\x32\x7c\x1c\xe3\x7e\x8e\x38\x1c\xff\x1f\xf9\x56\xce\xb7\xd3\x3b\x1d\x78\xc0\x74\x76\x7f\x04\x59\x7f\xb5\xab\x56\x6f\x8a\x5e\x1f\xbe\x77\x72\xf2\x49\x97\x67\xf8\x1d\x8e\x66\xd1\x14\xa3\x68\x3a\x45\xf2\x23\x1c\xc3\xef\x9f\xf5\xce\x3a\xc1\x31\xd7\x73\x73\xbd\x36\xd7\x77\x73\xfd\x36\x77\xee\xe6\xce\xdb\xdc\x85\x9b\xbb\x68\x73\x97\x6e\xee\xb2\xcd\x5d\xb9\xb9\xab\x36\x77\xed\xe6\xae\xdb\xdc\x8d\x9b\xbb\x69\x73\xb7\x6e\xee\xf6\xdb\x3d\xbb\x17\xd2\xff\xbe\x10\xf7\x46\xfa\xdf\x36\x72\xeb\x18\xfd\x10\x3e\xd5\x35\xcf\x7e\xb8\xff\xc6\x51\x98\x44\x18\x8e\x07\xd1\x13\xb8\xd6\x15\xa5\xda\x30\x43\x69\x56\x69\x23\xb7\xa4\x52\x9e\xa7\xa5\x92\xcf\x94\x19\xfb\x33\x2b\xa4\xa6\x3c\x65\x26\x55\xb4\xb2\x05\xb3\x2f\x29\xe5\x22\xa7\x37\x3c\x8e\x1b\x05\xbf\x56\x08\xf0\x45\x22\xc0\xa7\x46\x80\x0f\x91\x00\x8d\x4a\x00\x2b\xd3\xb9\x3b\xb6\xf3\xcc\x15\x4b\x1b\x4f\xd9\x86\x89\x35\xa5\x85\x5c\x1f\x0a\x3c\x4f\x57\x9c\x8a\xfc\x73\xb4\x93\xf6\xdf\xe9\x00\x35\x7e\x78\xab\x99\x22\x66\x08\x4c\xa0\x39\xbe\x92\xaa\x7e\xbf\x6b\x12\xa4\x98\x4d\xa3\x57\xae\x4c\xc5\x8a\xe6\xd4\xd1\xdb\x3c\x5c\x52\xb5\xad\x23\xc6\x46\xc3\x7f\xb3\xd1\x28\x89\x9e\x92\x83\xed\x45\xf3\xbf\x1b\x7f\x3a\x5d\x55\x45\x91\xf2\xfc\x6d\xe1\x1f\x35\x52\x9e\xeb\xf4\x30\x65\x71\xb0\x75\xc8\xcb\x81\xdc\x89\xf7\xc4\xfc\x88\x4b\x5b\xfc\xab\xc0\x54\xb2\x28\x6c\xb0\xb0\xec\xc5\xf3\xfe\x04\x00\x00\xff\xff\xaf\xa4\x57\xce\x85\x05\x00\x00")

func migrations20171122172200_indexesSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrations20171122172200_indexesSql,
		"migrations/20171122172200_indexes.sql",
	)
}

func migrations20171122172200_indexesSql() (*asset, error) {
	bytes, err := migrations20171122172200_indexesSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/20171122172200_indexes.sql", size: 1413, mode: os.FileMode(420), modTime: time.Unix(1538408912, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"migrations/20170523183416_init.sql": migrations20170523183416_initSql,
	"migrations/20171108110099_rbac.sql": migrations20171108110099_rbacSql,
	"migrations/20171122172200_indexes.sql": migrations20171122172200_indexesSql,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"migrations": &bintree{nil, map[string]*bintree{
		"20170523183416_init.sql": &bintree{migrations20170523183416_initSql, map[string]*bintree{}},
		"20171108110099_rbac.sql": &bintree{migrations20171108110099_rbacSql, map[string]*bintree{}},
		"20171122172200_indexes.sql": &bintree{migrations20171122172200_indexesSql, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

