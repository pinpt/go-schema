// Code generated by go-bindata.
// sources:
// migrations/20170523183416_init.sql
// migrations/20171108110099_rbac.sql
// migrations/20171122172200_indexes.sql
// DO NOT EDIT!

package migrate

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _migrations20170523183416_initSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x5d\x5b\x73\xe3\x36\x96\x7e\x4e\xff\x0a\x54\x5e\x9c\xae\x51\x6f\x75\x66\x26\xbb\x5b\x35\x35\x0f\x4e\x5b\xe9\xf5\xac\xdb\x9d\xf8\x32\x95\x3c\xd1\x10\x09\x49\x18\x53\x00\x07\x00\xed\x76\x7e\xfd\x16\x01\x90\xc4\x9d\xa0\x2c\xa9\xb3\x7e\x49\x5a\xfc\x0e\x00\x02\xe7\x8e\x03\xf0\xdd\x3b\xf0\x71\x79\xbd\xbc\x39\xbf\x5b\x5e\x80\xdb\x5f\xae\xfe\x03\x5c\x7c\x06\xd7\x9f\xef\xc0\xf2\xe2\xf2\xee\xcd\x9b\x77\xef\xc0\x9f\x36\x94\x72\x04\xee\x9b\xee\x1f\xb7\xbf\x5c\x01\x4c\x00\x47\xa5\xc0\x94\x80\xb3\xfb\xe6\x0c\x60\x0e\xd0\x17\x54\xb6\x02\x55\xe0\x79\x8b\x08\x10\x5b\xcc\xc1\x0e\x6f\x18\x94\x20\xcc\x01\x6c\x9a\x1a\xa3\x4a\xb6\x07\xce\x3f\x5c\x7d\x64\x90\x08\xf9\x00\xec\x60\xd3\x60\xb2\x01\x74\x0d\x18\xe2\xb4\x65\x25\x02\x82\x02\x46\x6b\xc4\xc1\xf3\x16\x97\x5b\xd0\x30\xfa\x84\x2b\x04\x20\x68\x10\xdb\x61\xce\xbb\x56\xd7\x94\x01\x68\x91\x40\x49\xf4\xe6\xc3\xcd\xf2\xfc\x6e\x09\xee\xce\x7f\xbc\x5a\x82\x07\x58\xd6\xc5\xa6\xeb\xed\x01\x7c\xf7\xe6\x9b\x07\x5c\x3d\x00\xe3\xef\x9f\xe7\x37\x1f\xfe\xe7\xfc\xe6\xbb\xff\xfc\xeb\x5b\xf9\xd2\xd7\xf7\x57\x57\xe0\xe7\x9b\xcb\x4f\xe7\x37\xbf\x81\xff\x5d\xfe\xb6\x78\xf3\xcd\x43\xb9\x45\xe5\x23\x6f\x77\x9a\xb0\xc7\x77\x8f\xfa\xde\x0b\xd5\x6c\xa8\x35\x09\xa3\x75\x0f\x89\x75\xda\xc1\xc6\x97\x93\xc8\xe5\xf5\xfd\xa7\xef\xce\x18\x82\xd5\xd9\x42\xfe\xe7\x99\x61\x81\xce\x16\x67\xb0\xda\x61\x72\x66\xd3\xca\xdf\x8a\x96\x23\x26\x3b\x8a\x75\x51\xb6\x5c\xd0\x9d\x06\xc5\x47\x52\x32\x04\x05\xaa\x0a\x28\xe4\x48\x7e\xbc\xfc\x78\x79\x7d\x07\xee\xaf\x6f\x2f\x3f\x5e\x2f\x2f\x2c\x68\xdb\x54\x09\xe8\xe2\xcd\x37\x97\xd7\x17\xcb\x5f\xc1\xb0\x0c\x85\x31\x67\x05\x26\x15\xfa\x02\xbe\xb3\xe6\xf1\x6d\x88\x46\x4d\xe0\x88\xd7\x13\x1a\xc2\x1a\xaf\x38\xe0\xcd\xd7\x7e\xfb\xe6\x9b\xb7\x60\x79\xfd\xf1\xf2\x7a\xf9\xf7\x4b\x42\xe8\xc5\x8f\xe0\x62\xf9\xd3\xf9\xfd\xd5\x9d\x5c\xda\xdb\xe5\xdd\xdf\x5b\xb1\xfe\xef\xdd\xea\xaf\xe0\xc3\xe7\xab\xab\xf3\xbb\x65\xff\xef\xa2\x25\xb8\xa4\x15\x2a\x4a\xfc\xb7\x81\x93\x6f\x7a\x06\x94\xcc\x5c\xa1\x35\x26\xa8\x1a\xd9\x12\x77\xd2\x80\x00\x7f\xe1\x02\xed\x02\xac\xd9\x03\x8f\xc1\x9d\x2d\x23\x0f\x81\xd6\xfe\xfc\xc3\x0f\xf6\x6a\x57\x88\x97\x0c\x37\x42\x33\xde\xdd\xf2\xd7\xbb\xee\x67\x81\x45\x8d\xc6\x06\xfa\x9f\x9b\x76\x55\xe3\x72\xf8\xfd\xee\xf2\xfa\xb7\xcb\xeb\xbb\xef\xbe\xb7\xdb\xdc\xe2\xaa\x42\x64\x0a\x25\xb9\xd6\xe8\x22\x8c\x3a\x0e\x37\x0e\x3c\xd7\x32\x32\x30\x4a\x37\x65\x87\x66\x10\x5a\x6b\xe6\xe8\xb8\x16\xf0\x06\x95\x78\x8d\x4b\x20\xe0\xaa\x46\x03\xc3\xac\x5e\x00\x24\x40\xce\x47\x88\x4b\x68\x7d\x14\x0e\x21\x70\x67\xac\xf0\xd0\xda\xf7\xef\xdf\x67\x71\x48\x5c\xe9\xa4\x75\xcd\x11\x17\xb5\x53\x0c\xdd\x5b\x0d\x2b\x2a\x5f\xf1\xad\x0f\x3a\xb1\x9a\xb8\xe7\x88\x49\x4e\xd8\xc1\x86\x83\x6e\xca\xf8\x60\xe5\x02\x0b\x2e\xe7\xf4\x58\xab\x3e\x2c\x58\xda\x1c\x65\x5a\xad\x4c\x93\x92\x6b\xa0\x8e\xc2\x16\xc3\x74\xf6\x03\x18\x05\x5e\x0f\xe8\x6d\x04\x9f\x67\x79\x46\xfc\x49\xd9\xaa\x69\x94\x62\xd9\xe2\xcd\x16\x31\x50\xa3\x27\x54\x03\xb8\xe2\x82\x41\xe5\x9e\x41\x46\x5b\x52\x01\x08\x6a\xba\xc1\x25\xac\x41\x4b\xb0\xe8\x3c\xad\xae\x21\x00\x49\xa5\x0d\x93\xc7\x82\x4d\x73\x42\x75\x93\x6b\x90\xba\x97\x7a\x1a\x1b\xf8\xf1\xf3\xe7\x2b\x9b\x61\x51\x43\x0b\x5c\x71\x8d\xf8\xc7\xed\xe7\xeb\x43\xb3\x54\x26\xb7\x6b\xce\x68\x9a\xb4\x2e\x6a\x9a\x93\xf2\xcb\x07\xba\xdb\x61\xed\x75\x6f\x10\x41\x6c\xb0\x42\xca\xcd\x56\xd3\xbe\x42\xdd\x73\x8e\xc9\xa6\x46\x8a\x4f\x4a\x49\xe7\xb0\x88\xfa\x31\xc8\x25\x7b\x72\x8a\xcb\x2d\x7a\x39\x43\x2e\x8c\xab\x35\xf8\x16\xba\x23\x88\x41\x57\x0c\x92\x72\x1b\xe4\x6a\xc9\x87\xfd\xec\x7e\xbb\x83\x5c\x20\xf6\x6d\x47\xb3\x43\x9c\xc3\x8d\xc9\xba\xe0\xea\xf3\xf5\xc7\x9e\x2f\x77\x88\x6d\x50\x3f\x1f\x06\x6f\xf6\x4d\xad\x61\xcd\x51\x07\x44\x5f\xca\xba\xad\x90\xf9\x4a\x61\x60\x03\x19\x22\x22\x26\x7a\x23\xc2\x9a\x1e\x07\xd1\x71\xb2\x33\x29\x29\xd6\x87\xad\xd8\x52\x56\x98\xb6\x21\xaa\xa3\xe5\xab\x0a\xc4\xa6\xd5\x39\x65\x15\x26\xb0\x36\xc7\x71\x79\x7d\x17\x10\xa4\x54\x7f\x0c\xad\x0b\xf1\xd2\x04\x55\xc7\x7b\x1f\x9a\xa1\xb3\xd4\xaa\x09\x58\x41\x61\x32\x8e\xd6\x18\x4a\x3a\xd5\x5b\x16\x9a\x0b\x8d\x50\x45\x71\xe5\x5b\x17\xc8\xb7\x70\x00\x75\xfc\xe8\x01\xec\x19\x1e\xb0\xce\xc4\x7b\x64\xde\x6c\x8f\x7a\xc2\x5b\x07\x9f\x78\x4a\xbd\xf8\xaf\xab\xe6\xda\x78\x5f\x3d\xf9\x41\xa8\x35\x31\xeb\x23\x29\xac\xf3\x4e\xef\x63\xf1\x12\xd7\x5c\x35\x26\x8f\x86\x57\x55\xd3\xb2\x73\xa8\xd5\x38\x75\xa2\xa0\x13\x87\xa0\x0a\x2b\xa0\x6e\xde\xd7\x65\x39\x4a\xcc\x14\xb3\x94\x7c\x99\x2a\x2a\xc6\x92\x39\xc2\x67\x6a\xc5\x18\x66\x8d\x6b\xd4\xdb\xda\x1e\xf3\x5f\xae\x4f\x6f\x8a\x66\x6a\xe0\x35\x1d\x83\xbd\x0e\x34\x4c\x44\xbf\xac\xef\xe5\xeb\x19\xb0\x38\x6a\x55\x43\xf2\xa8\xed\x73\x1c\xd5\xad\x0b\x22\x42\xe2\xa2\x28\x5b\xb4\xf4\x12\x66\x08\x61\x8f\x9c\x76\x04\x5d\x8a\x6c\x4d\x30\x50\xf4\xeb\x30\x90\x0c\x0b\x93\x41\xd3\x77\xd7\x31\x58\xa1\x17\xcb\x6f\x68\x31\x0c\x63\xa1\x58\x71\x31\x2c\xec\x11\x24\xf1\x27\xdc\xc7\xb2\x99\xfe\xc3\x5a\x12\x90\xee\x87\x3e\xee\x4d\x78\x13\xf2\xe5\x8f\xe9\x52\xe8\x6e\xa6\x64\x7c\xa6\xf7\x71\x1c\xd3\x69\x0a\xb1\x33\x80\xef\xdf\xff\xd9\x01\xd7\x90\x6c\x5a\xdb\x45\x09\x06\xf3\xa3\x7b\xd3\x92\x47\x42\x9f\xc9\xb7\x2a\x36\xab\x70\xe7\x6c\xf3\x07\x30\x2d\xe9\x15\xaa\x51\x36\x98\xe3\xdf\x5d\x27\x24\x0e\x86\x2b\x4c\x20\x7b\x31\xf1\x96\x8f\xef\xfb\x49\x33\x7d\x9c\x29\xdf\xcf\x9f\x25\xcb\x09\x0c\x7b\x79\xf1\xd1\xc5\xdc\xbd\x38\x85\xa9\x6b\xa7\xe7\xd6\x47\xe7\xe9\xd4\x49\xb0\xa9\xa6\x27\xc1\x4f\x90\x61\x48\x4a\x94\xd5\x32\x17\x50\xb4\x76\xcb\x2a\xcd\x0d\xab\x0a\x55\x67\x8b\xb3\x1d\xad\xf0\x1a\xcb\xff\x95\x8c\x86\xaa\x33\x57\x2e\x3b\xa1\xa8\x66\x30\x89\xa6\x28\xd6\x8c\xf6\x7a\xa1\xf7\xdc\xfb\x47\x82\x8e\x99\x4a\xfd\xe8\xff\x8b\x7f\xda\xa9\x89\x62\xd0\x6b\x8e\x6f\x18\x34\x4f\x8a\x62\xae\x63\x28\xa9\x66\x78\x87\x03\xfe\x24\x2e\xe2\x25\xe7\x6d\xc2\x32\x29\xff\x90\x12\x04\x28\x03\x3b\xca\x3a\x28\x6f\x11\x57\xbb\x46\x1f\x12\x16\x49\xe2\xc2\x26\x69\x1f\x7b\x94\x32\x46\xb9\x11\x6b\xbe\xca\x72\x12\x7d\xd9\xb6\x2e\x86\x93\x93\x91\x21\x10\xae\x5a\x4e\xe9\x64\x57\xce\x72\x85\x2c\x25\x61\xe6\xcc\xa6\xda\xcb\xf1\xa5\x25\xcf\xca\xf7\x56\xbd\x27\x25\xdb\x98\x9f\x5c\xb1\x0e\xc9\xb4\x6a\x67\x96\x50\x6b\x92\xb9\x52\xad\xc8\x66\x88\xf5\x48\xe0\x0f\xcf\x9e\xfa\x04\xa9\xef\x49\x8f\x6b\x91\x20\x1b\x97\xc1\xd6\x28\xe3\xea\x4c\x12\xbb\xca\xa8\x5f\xb0\x43\xa9\xa4\xa0\x0e\xe1\xed\x6e\x27\xfd\x9a\xbd\xb5\x48\xa6\xa6\xc8\x95\x63\xd7\x61\xcd\x4c\xed\xbf\x5a\x36\x5d\x3f\x33\xdf\xc9\x8c\x23\x3b\x3b\xc3\x8b\x72\x0b\xc9\x46\x7a\x05\x09\xaf\x26\xa5\x47\x43\xea\xd3\x75\xaa\x7b\x82\x1f\xa6\x3d\xea\x39\x1a\xd0\xcd\x2e\x1a\xa9\x45\x3b\xc1\xa4\xd8\x68\x9e\x5e\xe8\x89\xf2\xd3\x58\x9a\x60\xcf\x6c\xd5\x30\xc8\xb9\x9a\x68\x1c\x68\x54\x17\x1d\xd4\x6d\xe0\x02\x7c\x40\x44\x20\xa6\xbc\x86\xae\x07\xb5\x31\xc2\x05\xa8\x90\x80\xb8\x06\x25\x25\x02\x62\x82\x18\x10\x5b\x28\x40\x09\x09\x58\x21\xc0\xd0\xbb\x96\xa3\x4a\xa6\x95\x76\x6d\x2d\x70\x53\x23\x95\x7a\xf2\xa4\x9f\x8b\xa2\x94\x7d\x1c\xc9\x81\xc8\x14\x4f\x27\x8a\x94\x2e\x6e\x6a\xbf\x65\xf0\x81\x71\x85\x88\xe8\xdc\x71\xf6\x00\xcc\xdf\x5b\x22\xf3\x92\xbc\x0f\x84\x7e\xba\xfa\x7c\x6e\xb7\xf8\x04\xeb\xc1\x62\x82\xd1\xc9\x5f\x71\x5a\xb7\xb2\x86\xa5\x41\xac\x9b\x1a\xb8\x41\x8e\x7f\x2f\xdb\x36\x94\x89\xa2\xe4\xb0\x86\xec\xe5\x6c\x71\xb6\xa5\x2d\xab\xbb\xff\xe9\x16\x87\xc1\x52\x50\xd6\xfd\x03\xf2\x16\xd6\x67\x8b\x33\x2a\xb6\x88\x85\x5a\x2c\x5b\xc6\x10\x29\xbb\xe0\x52\xce\xd1\x5f\x1c\xcd\x54\xd7\xb4\x84\xc3\x04\x04\xde\xc8\xd9\x45\x9a\xb3\x8d\xe4\x62\x0f\xc9\xc7\x9a\x05\x42\xae\x6f\xc7\xa0\x5b\x5a\x57\x98\x6c\x40\xcf\x2a\x63\x1a\x46\xf1\xb8\xc7\xb3\x1a\x17\x60\xd8\x1c\x6e\xb5\x38\xcd\x63\x33\x6b\xff\x6e\x22\x68\xb3\xa6\x3b\x7b\xae\x03\x1b\x76\x96\xbf\xd5\x39\x5b\x07\x9c\xfd\x0b\x28\x20\xf8\xc8\x68\xab\xf7\x61\x9f\xe1\x4b\x17\x51\x50\xb6\x81\x04\xff\x8e\xc0\x96\x3e\xcb\xea\x9f\xfb\x4b\xb0\xe9\x50\x5c\x6e\xb9\xae\x71\x2d\x10\xe3\xa0\x1b\x95\x33\xfd\xdd\x4f\x85\x84\x1e\x35\x0b\x96\x1f\xda\xba\xaa\x23\x47\x7b\x98\xb5\x42\x93\xbb\x54\xca\x03\x6b\x18\xfd\x17\x2a\x85\xda\xbc\xed\xf7\x6d\xb5\x8d\xe1\x7e\x00\xec\xee\xf4\x82\xf8\x6e\xef\x5c\x51\x3d\xaa\xb4\x2e\xbf\x94\x75\xcb\x31\x25\x9f\x74\xcd\xa3\x32\x3d\x46\xa0\xba\x85\x1c\xc0\xba\x96\x5c\xd3\xa7\x8f\x80\x0a\x9b\x1d\x56\x41\x7d\x5b\x85\x2e\xa0\x0c\x71\x4c\x0e\xb3\xd8\x29\x89\x3c\x17\x2f\xe6\xe0\xd9\x01\x67\x72\x43\x72\x72\x6f\x3d\xb9\xb5\xee\xbd\x7d\x2c\xd5\x30\x41\x31\x15\xf5\xf8\x54\xa7\xdc\xb0\x8f\x66\x35\xe4\x96\x16\x51\x49\x0c\x87\x2f\x12\x09\x8b\x7d\x95\x47\xa2\x76\x28\xb0\x31\x3d\x88\xf2\x14\x4b\x39\xf5\x85\x21\xd5\xb2\xa2\xd5\x8b\xfd\x0e\xe6\xbe\x3b\x17\x6e\xfa\x57\x39\x0b\xb4\x41\xa4\x73\x0a\x6a\xca\xbd\xf4\xa1\x93\xa7\x1b\x68\x56\xed\xe6\x6c\x71\xb6\x46\x50\xb4\xac\xf3\x4f\x10\xd9\x42\x52\xa2\x1d\x22\x22\xe2\x56\x30\x24\x9d\x19\x43\xeb\xa9\x96\x08\x25\x48\x16\xec\x72\x5a\x3f\xc9\x44\x66\x4b\x86\x7f\x24\x8b\x9d\x66\xab\xaa\x90\x0c\xc9\x97\x4e\xa8\xb3\x11\xb4\x7a\x89\x96\xee\xb5\xac\x7e\x08\x73\x8e\x57\xab\xe3\x1b\x93\xfc\x34\x69\x7e\x96\x34\x3f\x49\x6a\xe5\x53\xe6\x66\x45\xf2\xd3\x21\x46\x62\x21\xa1\x74\xfc\xfe\xfb\x78\x6a\x14\x93\xe0\x90\x16\x83\xa0\x2d\x4c\x89\x72\x5b\x96\x12\x50\x8c\x6c\x14\x7c\x55\x25\x26\x0b\x93\xdb\x16\xc9\xf7\x97\xef\x6e\xb6\x14\x18\xac\x9c\x8e\x85\x33\xe6\xc4\x48\x87\x39\x55\x43\x36\x5a\x0c\x0d\x79\x98\xf0\xc5\x30\x7a\xa3\xed\xf4\xe8\x9d\x9e\x06\x81\xd8\xa3\xcf\x51\x98\x5e\xd1\xff\xb8\x38\x7b\x0c\xc0\x5c\xb2\xec\x11\xe8\x8e\xd3\x0b\x38\x74\x91\xbb\x82\xaa\x55\xcd\xf1\xe3\xac\xba\xed\x69\x19\x30\x27\x6f\x7a\x7c\x63\x73\xba\x7d\x4b\xfc\xc2\x43\x35\x17\x67\xe8\xf4\xe0\x89\x02\x65\x82\x3f\xa8\xdd\xb3\xbc\xad\x6f\xbd\xd5\xa6\xeb\x4e\xa2\x36\xba\xd0\xb8\x88\xad\xde\xcb\x54\xfb\x9e\x75\x46\x36\xd0\x33\xe9\x53\x16\x3d\xba\x51\xe1\x5a\xeb\xde\x58\x3b\xe1\x82\xdc\xd6\x33\x3c\xc1\x89\x3d\x5e\x85\x8f\x97\x99\xbb\x46\x74\x96\x0d\x0d\x58\xc7\xbe\xc3\x14\xc6\x33\x90\xf9\xf6\x31\xdb\x3c\x66\x5b\xc7\x6c\xe3\x18\xb2\x8d\x8a\x09\xfd\xf4\xf8\x98\x1a\x8f\x50\x4c\x17\xd0\xd8\xf8\xb9\x56\xb8\xa7\xcb\xb7\xc6\x26\x45\x86\x55\x0e\x8c\xeb\x95\xd6\xf9\x64\xae\x3f\xd0\xbd\x6a\xed\xa3\x13\x95\x5c\xef\x6a\x06\xb5\x8d\xa6\xd8\x37\x4a\xb4\x55\x4d\xbc\xa8\xdb\x13\x77\x5b\x52\xbc\xc7\xb6\xf4\xe6\x6f\x14\xbe\x2e\x4e\xcd\x8b\x79\x6d\xf9\x09\x08\x4f\xbf\xf6\x73\x59\xbb\xa7\xcb\x67\x6d\x93\xe2\xb8\x1b\xea\x92\xf1\x6e\x55\x32\x5e\xf1\x9f\xca\xcc\xe3\xdf\xd5\x61\x4e\x6d\xf5\xb0\xd8\xaa\xa1\xe9\x53\x07\x3a\x7d\x1f\x4a\x6a\x69\xa3\x9f\xda\x04\x7b\xbd\xe5\x33\xff\x92\x56\x70\xaa\x27\x19\x24\x52\x01\x6b\xa5\x12\xb9\x47\x18\x65\x50\x82\x9e\xff\xf2\xbe\xa8\xe0\x8b\x4f\x93\xa0\x52\x7d\x29\x67\x26\xbf\x2f\x85\x8f\x74\x17\xa5\x42\x5c\xe0\x9d\x14\xb7\x67\xca\x1e\x8b\x1d\x25\x62\x3b\x50\xfb\x29\xef\x20\x7c\xe8\xd3\xc7\xfb\x01\xbd\xf1\x37\xa1\x18\x02\x68\xe5\x7b\x60\xca\x64\x6d\x6e\x62\xf9\xbe\x7f\xff\xfe\xad\x09\x0e\x2e\xb7\xe3\x35\x04\x0a\x91\xe2\x0d\x2b\x70\x84\x8b\x82\x09\x4d\x3f\xcd\xe0\x35\x1c\xa8\xac\x50\xba\x20\x95\xb5\x09\x27\x1e\x12\x43\x1f\xc1\xd3\x0d\xfb\xf9\x94\x60\xc3\x21\xff\xa6\x58\x63\x54\x57\x4e\x4a\x76\x4c\xca\x0a\x04\x77\xb1\xc9\x1e\x40\x7d\xb2\x38\x28\xb1\xc1\xe3\x0f\x7c\x00\x5b\x8d\xf7\x0d\x06\x2a\xa8\x02\xbd\x7a\xf9\xaa\x70\xaf\x76\x31\x77\xc3\xb0\x5d\x4c\x17\x68\xb9\x86\x2b\x54\xc7\xde\x7a\x98\x19\xda\x14\x52\x83\x86\x70\xfa\x3c\x6c\x58\x98\x31\x2f\x6a\x04\xd7\xe1\xf6\x93\x94\x0d\x14\xdb\xa8\xe8\xc5\x6b\x4c\x03\xdb\x06\xd3\x33\x15\xa8\x8d\xf3\x89\x32\xaa\xe4\xa6\x7b\x72\x19\xb1\x78\xc2\x4c\xb4\xba\xc0\x7d\x2c\xf8\xab\x11\xe4\xa8\xa8\x5a\x06\x3d\x09\xd2\xde\x87\x97\x6c\xb6\x0c\xd8\x0c\x4f\xb9\xa7\x30\xf4\xd2\x40\x64\xea\xaa\x18\x9d\xa5\x14\x9c\xee\x7a\x55\x11\xa3\xb5\xe4\xde\x3a\x67\x3f\x6a\x83\xe8\x78\x6d\x41\x1c\xc7\xec\x08\x68\xfc\x7d\x3d\xef\x39\x95\x57\xd0\x54\x83\x24\x8c\x39\xa6\x41\x36\x62\x34\x73\x1d\x2f\xb3\xc8\x60\x3a\x42\x08\xf5\x12\x9b\x1b\x27\x8d\x92\x39\x53\x66\xcb\xfe\xfb\xdb\x6d\xce\x9b\x0d\xa3\xb5\x20\x17\xc5\xda\x5e\x64\xf2\x57\x4e\x5f\x36\xdf\xcf\xe8\x74\x61\x8b\xc7\x01\xbd\xdb\x7f\x60\x06\xd5\x9e\xf9\x4f\x9d\x9e\xf0\x37\xe0\x86\x50\x4a\x6c\x11\x68\x09\xfe\x77\x8b\xf4\xe6\x39\x90\x9a\x85\x83\xb5\x3a\x52\x5b\x32\xca\xd5\x5e\xdd\xbf\x30\x1b\x02\x32\x37\xf6\xea\x9e\x15\xa6\x66\x3a\xde\xce\x4c\xaf\xf8\x82\x79\x9c\x89\x4d\xdd\x68\xf6\x82\x97\x5b\xb4\x83\xa6\x06\x8f\xba\x30\x1a\xaa\x5e\xf6\x21\xa7\x55\x3d\x2f\xdd\x90\xa7\x4f\xda\x4e\x1d\xb6\xf5\x66\x3a\x79\xf4\xd6\x47\x9f\x72\x5f\xcf\xe1\xc2\x7f\xc2\xba\x8f\xf5\xe7\xb0\x22\x90\x45\x36\xaf\x65\xc8\x42\xb6\x72\xac\x24\xa4\xc7\x3f\x51\xf6\xd1\xc3\x18\xff\x82\xc9\x43\xc7\xc8\xe7\x97\x2e\xce\x65\x1e\x55\xc0\xe4\x74\xe7\x30\xc6\x38\x8c\x14\x63\x99\x2d\x9d\x88\xbd\x2e\x6f\xce\x75\x70\xae\x02\xf8\x06\x95\x18\xd6\xf8\x77\x54\x81\x27\xc4\xe4\xed\x49\x74\x0d\xa0\x4e\x32\xad\x29\x93\x24\x21\x4e\x49\xee\x26\xbf\x46\x73\xf9\xac\x12\x8b\xd4\xa3\x5a\x24\xe6\xb9\xa7\xab\xd7\xfd\x18\x2b\x3b\x2f\xee\xe3\x65\x55\x13\xe7\x78\x43\x90\x37\x74\x2f\x8b\x1e\x0e\x4e\x83\x71\xa9\xdf\x6d\xdc\xbf\x0e\xc7\x77\x4e\xb3\x6b\xfc\xa5\xd0\x4b\x6f\x45\x4b\x7d\x18\x12\x7a\x66\x3e\x47\xe4\x09\x33\x4a\x76\xee\xa9\xf4\xe1\xb4\x0c\xdd\x35\x94\xa8\x5a\x9f\x50\x55\x8e\x8c\x85\xbc\xd6\xc7\xe7\x55\x8b\xe4\x39\x47\x68\x37\x1f\xb2\x0b\x4d\x0d\x09\x41\x55\xc1\x05\x64\x22\xbd\x19\xde\x43\x11\xb1\x76\xc4\x43\xd0\x47\x94\xce\x31\xb8\x21\x4a\x2c\xec\xed\x5f\x48\x45\x88\xfe\x3a\x0e\x13\xda\xe0\x32\x83\xb9\x02\x05\x54\x21\x18\x17\x0c\x0a\xb4\xc1\x65\x61\x13\xb8\xb9\x09\xd2\xf9\xe6\x1b\x86\x38\x2f\x4a\xda\x0e\x6b\xe9\x44\x3d\x0f\x0c\xd1\x06\x11\x0b\x12\xc4\x99\xed\x99\x11\x95\x1f\x48\x75\x0c\x86\xd7\x58\x95\x58\x9a\xd8\x00\xd4\x6c\xd5\x5c\x64\x05\x4d\x45\xa2\xc9\x33\x1c\x33\x82\x56\x75\x9d\x4b\xfe\x51\x2d\xa3\x14\xd6\xfa\xbb\x59\x9e\x07\x76\xb6\xde\xdb\xc6\x42\xeb\xbd\x8c\xa8\xd2\x80\xe7\x86\x58\x5e\x0f\xb9\xd1\xa4\x41\xf8\x88\x5e\x06\x78\x27\x26\x41\x90\xe6\xe7\x01\xd8\xf3\x77\x78\xf4\x3d\x93\x7a\xa1\x65\x84\x20\xc0\xdf\xc6\xee\xb0\xcf\xfb\xc1\x46\xf2\x83\x45\x83\x68\x2a\x52\x34\xa0\x06\xd7\xd8\x9b\x62\x07\xce\xd2\xc7\xcc\xb4\x3e\x04\x51\xd4\x74\xef\x5a\xc0\x64\xfd\x9e\x6d\xe8\x92\xbb\xb0\x01\x05\xab\xa3\x1f\x57\xad\xba\x46\x5d\x29\xd4\xde\x5f\xec\xcd\x8b\x71\x74\xd3\xa9\x01\xeb\x9e\x74\xec\x21\x0b\x20\xad\x27\xc6\x99\x4e\xe0\x3e\x19\x29\xec\x27\x79\xfb\x42\x79\x3b\x51\xb6\x3f\x13\x43\xd9\x4e\x4c\xde\x35\x2a\xc1\x24\x55\x90\x0f\x7a\xfb\x34\xdc\x1a\xd0\xad\x41\x58\x38\x46\x9a\xbd\xe4\xc4\xa0\x4f\xa8\xb2\x43\x3b\xb9\x81\xea\x8c\x09\x67\xf7\x83\x51\x9c\x61\xf8\xc9\xfd\xf1\xe8\x84\x70\xc5\xab\x35\x5e\xb7\x7f\x3a\xec\xc0\x5b\x1c\xe0\x09\xc6\x21\xd9\x29\x29\xe6\x76\x89\xc4\x61\x76\x64\x27\x65\xca\xe7\xa7\x7e\x77\x7e\x98\x1d\xeb\xb4\x53\x52\xcf\xcf\x28\x69\x08\x90\xed\x61\x5a\xf3\x4b\x22\x42\x6f\xb8\x97\xb8\xa5\x4b\x1d\x8e\x23\x67\x57\x9d\x13\xaf\xa4\x4c\xa7\x23\xa4\x5b\xaf\x4b\x12\x36\xf8\x09\x91\x3e\xed\x10\x97\x23\x49\x72\xec\x2a\x84\xcc\x6a\x9c\x5c\x66\x54\xd1\xcb\x64\x3e\xc9\x04\x9f\x3c\xde\x57\x4b\xf4\xb3\x8e\x32\xbb\x55\x12\x5b\x04\xfa\xa8\x53\x25\x96\xe2\xab\x32\xee\xb3\x1e\xef\xd8\x89\xdd\x93\x95\xbd\xf1\xd6\x29\xe7\xdc\x09\x2e\x29\x29\xa6\xca\x4b\xb2\x8f\xba\x04\x5c\xec\x7e\xa0\xee\xb8\x1d\x85\x12\xde\xca\x09\xb5\xf4\xd5\x98\x42\x45\x53\x40\x30\x58\x3e\xf6\x8c\xa1\x7f\x33\x85\x57\xd9\xc2\xd5\x8b\x3c\xce\x98\x62\x16\x45\x7b\x78\x29\x4e\x1a\xa6\x3c\x0b\xa8\x22\xc6\xfe\xac\x49\xc0\x11\x45\xa4\x2a\xc6\xa3\x28\xa1\xfa\x3f\x6b\x6f\x70\xdf\x73\x2a\x7b\xda\xbd\x21\xf2\x9d\x65\x4b\x06\xaa\xf9\x61\xa4\xce\x06\xec\x63\x84\x06\xea\xe3\x5a\xa1\x28\x1f\xaa\x28\xe1\xf0\xd7\x94\x3a\x89\xc2\xcc\x6d\x94\xa8\x2e\x8b\xdc\x66\xea\xa8\x2f\x93\x3c\x50\x1e\xe3\x3e\xe6\xed\x4a\x40\xfe\x38\x24\xbf\xdc\xbb\x50\xe7\xdc\x53\xea\x4c\x69\xae\xa1\xf3\x8e\x09\x9c\x44\xa5\x25\x1c\x8c\xa3\x95\x38\x86\xbd\x6a\x6f\xa1\xed\x1c\x62\x74\xa7\x03\x3e\x41\x01\x59\xbf\xf4\x71\x57\x05\x0a\xb4\xa1\xec\x25\x1c\x6e\x1f\x45\x05\xf5\xef\x39\xcb\x05\x9e\x5f\x04\x69\x91\x9d\x5c\x77\x8c\x1d\x8f\x65\x54\xc7\x38\x9d\xef\x66\xe6\xf3\x42\xb6\xfc\x5d\xdb\x5c\x7d\x13\xbd\xd1\x2a\x9f\x1f\x8c\x57\xd9\x8b\x35\x0c\xfa\x49\xdd\x12\xa0\x39\x95\x8e\x49\x30\x8b\x4a\xe7\x9f\xba\x78\xf5\x15\xb5\x69\x91\xfa\x29\xcf\x41\x0e\x38\xda\x09\xf4\x5e\x25\x60\x25\xdd\x35\x35\x12\xa8\x08\xdc\xd6\x37\xed\xa0\x4d\xe3\x6d\x8f\x2f\x0b\x1f\x2f\x73\xec\x85\x65\x43\x61\xbc\x3c\x75\x30\xe1\x04\x0b\xdc\x57\x0a\xc7\xaa\x10\xd7\xea\xe2\xce\x10\xc4\x05\xe9\x23\x4d\x2e\xb6\x07\xd9\xdd\x39\xbb\x33\xee\x2e\x8a\xd9\xed\xe4\x46\x8e\xd5\xb1\x8b\x76\xc1\xf2\xaa\xbe\xdc\x96\x19\xda\xd1\xa7\x18\xdc\xdf\xf9\x31\x5e\x90\x3b\x45\xd1\x13\x60\x4c\x0a\x3d\x89\xaa\x8f\x78\x92\xd4\x96\xe9\xfd\x34\x9a\xa6\xfd\x23\x68\x26\x5d\xc8\x7c\xa4\xfa\x0d\x77\x3b\x3a\xd7\x8a\xe5\x17\x1f\x65\xdb\xb1\x98\xe7\x6c\x58\x38\xed\x32\x45\x1f\x14\xbd\x8b\xe6\x3d\x28\x69\x4d\xd9\x43\xe0\x41\xc0\x2c\x07\x8b\x09\x0e\x58\x88\x62\x2f\xed\x9e\x0c\xaa\x68\xb3\xcd\xad\xc6\x9f\xdc\x9d\xef\xc2\x5a\x23\x71\xbf\xc6\x65\x34\xf9\xd0\xfd\x7e\xaa\x94\x83\xc7\x8c\x1d\x6c\x64\xdd\x09\x33\xea\x3d\x46\x3b\x88\xeb\xe9\xcd\xaf\xcc\xc8\xc0\x0e\x0d\x5f\x97\xeb\x9c\x1d\x23\xc8\xf9\xca\x4c\x4e\xc8\x9f\x67\xc6\x05\xa1\x5d\xd4\xa3\x06\x05\x3b\x5a\x3e\xc2\x06\x17\xf2\x13\x75\xfd\x1d\x50\x07\xdf\xe4\xc9\x5a\x0b\xf4\xc5\xf4\xdb\x02\xa5\x11\x69\x36\x53\xb3\x18\x78\x9f\xaf\x64\xa7\xfa\x91\x54\xa8\xa9\xe9\x4b\xe2\xac\xf3\xab\xcc\x55\xc8\x6c\x45\xfd\xd4\xd8\xcc\x9b\x93\xa5\x56\xa1\xe8\x17\x23\xb0\x0c\x01\x74\xda\x08\xd8\x0b\x6b\xfc\x4d\xae\xb1\xf1\x97\x5e\xee\x71\x92\x67\x48\x5c\x80\x38\x3a\x13\x43\x53\xf1\xb9\x9a\xdb\x70\xba\xd1\x03\x9b\x9b\x9f\x19\x2d\x11\xe7\x98\x6c\xc0\x92\x31\x2a\xad\x8e\xbc\xc8\x4f\x50\x95\x18\x07\xa8\xfb\x99\x83\xaa\x65\x1d\xa8\x19\xf0\x0e\x5b\x8f\x0f\x0a\x49\x71\x04\x6d\x91\x7d\x28\xd6\x3e\x5a\xe3\xd9\x1d\xfb\x6a\xc9\x4f\xcb\x8b\xcb\xfb\x4f\x1e\x68\x0d\x85\x11\xeb\x4c\x64\x12\x93\x06\xc2\x9d\x99\x93\xba\x13\x37\xa8\xa1\xb9\x17\x34\x54\x08\x30\xd4\x50\x8e\x05\x65\x2f\xce\xf2\x76\x0f\xbe\xe6\xc7\xaf\x12\x89\x5f\x5b\x09\x25\xbe\x86\x35\xcc\xa2\x60\xad\xbc\x44\x61\x4d\xd9\xa3\xd1\xea\xc4\x95\x0b\x4e\xd5\xa1\xe3\xfa\x46\xf2\xd9\x5f\xe1\x33\x5b\xee\xe9\xb2\xcc\xf3\x64\x99\xf7\x25\x58\x07\xbe\xe5\x8d\x73\x29\x6f\x5a\x02\xf2\x35\xaf\x84\xe7\x9c\xff\x1e\x80\xa7\xf2\x87\x64\x87\xaf\xbc\x53\xee\xb5\x8e\x90\x7d\x91\xf1\xab\x5c\xd7\xbc\x1b\x01\x8c\xb9\x1e\xaf\x87\x9b\xba\x31\xd7\x81\x1f\xbb\x12\xe3\x16\x6f\x08\xac\xb5\x56\xb3\x14\x1d\x47\xf2\xa3\x7e\x5c\x02\xb8\xba\xad\x16\x32\x04\x4a\x58\x97\x6d\xdd\x89\x1a\x58\xa1\x2d\x26\x95\xfa\x16\x6d\x89\x88\x77\x49\x84\xa2\xdd\x77\xbd\x6d\xdd\xa6\xe0\xc9\xf3\x1d\xf1\xca\xd8\x07\x81\x77\xa8\x25\xfd\x47\x36\x5c\xef\xc8\x4e\xf3\x5d\x74\x6f\x10\x17\xe1\xe1\x4e\xc8\xd7\x5d\x1d\x91\xe4\xb5\x81\x1b\xd4\x0c\x26\x75\x84\x86\xe4\x6b\x09\x4d\x90\xa3\x27\x0c\x68\xaa\x5e\xd5\x1c\x65\x3f\xd3\xc1\x01\xe9\xaf\x0b\x0d\xab\x11\xbb\x72\x6a\xb2\x41\x59\xd7\x9f\xd7\xaa\xfe\x84\xd1\x71\xf4\x1a\xa7\x04\xb2\x7f\xb7\x2b\x54\xec\x90\x60\xb8\xfc\x83\xdc\xb0\xda\x27\x60\x8c\x10\x61\xce\x89\x97\xa9\x66\x1f\xd1\xcb\xd0\x74\xb4\xdd\x40\x78\x12\xcf\xca\x45\x3f\xb9\xe3\xc8\x21\xc3\xe5\xa4\xfb\xe4\x2b\x86\x14\x54\x33\x9c\xb3\x8e\x73\xc4\xc9\x25\x9d\x48\xad\x1d\x99\x0f\x8f\xb6\x5f\xbd\x4f\xb6\xc1\x0b\x0b\xec\xdd\xec\x99\x19\x2f\x77\xbe\xb3\x37\x89\x0f\x69\x2f\xe5\xa7\x6d\x95\xa5\xd4\x56\xda\x0a\x09\xe4\x97\x98\xc5\x16\xb3\xea\x5d\x03\x99\x78\x01\x98\x08\xb4\x61\xfa\x9a\x1b\x6a\x7d\x2e\x66\x88\x16\xb0\x6f\x39\x65\x37\x87\x5f\xc4\x93\xfb\x40\x73\x22\x3d\xf5\xd2\x19\x3e\x92\x06\x9e\x72\xdd\xef\x79\xf8\x3e\x74\x63\xd5\xa1\xce\x3b\x13\xf9\xfd\x9f\xf1\xd3\x74\x7a\x44\xfd\x0d\xde\x92\x15\x9c\xe5\x8e\x65\xa1\xbf\x82\xe9\xb0\xb3\xca\x9e\xda\x8e\x24\x93\x86\x4b\xfc\xad\x8c\xb6\x45\xed\x97\xac\xd8\xb1\x26\x08\xe5\x09\x60\x2b\x28\x22\x8c\xd6\xf5\xb0\x67\xe7\x61\x9e\x30\xc7\x2b\xfb\x8e\x20\xbf\x1d\x2b\x09\xee\xbd\x95\x33\x03\x4d\x4d\x5f\xac\xb3\x97\xfd\xeb\xd9\xf7\xf9\x5b\x8f\x18\xda\xb8\x57\x7f\xf4\x8f\x2a\xd4\xa9\x02\xeb\x98\xe3\x48\xd5\x50\x26\x78\x21\x68\xf4\x2a\xc2\xc0\x05\x48\x03\x35\xf5\xae\x46\x8a\x04\xce\xe0\xd5\x37\x96\x07\x62\x59\x60\x5d\x9e\x9e\x3a\xd8\x16\x08\xab\x81\xe7\x0e\x2b\xd9\x96\xd3\x20\x99\x70\x3c\xf6\x25\x59\xd2\x81\xf4\x9c\x16\xd4\x02\x03\x1b\xc6\x1c\x4c\xa3\x97\x10\xbd\xea\x71\x71\x5c\x6d\xe2\x7d\x2e\x64\x50\x19\x0c\x95\x94\x55\xba\x8a\x56\x7d\x80\xd6\xf8\x84\x88\x6b\x2b\xd4\x86\xc8\x1f\xe5\xbb\x20\xb9\x9f\x07\x33\x06\x1c\xe2\xfa\xe0\xd7\x40\x16\x87\xfa\x94\xc7\x22\xfe\x05\x8f\x45\xec\xc3\x1d\x21\xa9\xfa\x63\x7c\xaf\x43\x72\xd3\x15\xdd\x60\x12\xbb\xdb\x51\xa6\xa2\x3b\x57\x45\x5a\xa8\xba\x83\x06\xb9\x48\x3e\xf9\x5a\xae\x63\xb4\x4e\xdb\x42\xad\x18\x7d\xe6\xfd\xb7\x63\x46\x15\x9b\xfa\x0c\xc0\x40\x7f\x14\xd7\x5b\x0e\xfb\x2b\xa7\xb6\xf2\xa6\xee\xe0\xa9\x2d\xf3\xd5\x33\xb6\x6f\x2d\xf8\x71\x53\x5b\x9d\x5c\xfc\x69\x43\x29\x47\xe0\x82\x3e\x93\xee\x9f\xb7\xbf\x5c\x01\x8e\x4a\xe9\x88\x9f\x75\x3f\x9e\x75\xd2\x82\xbe\xa0\xb2\x15\xa8\x02\xcf\x5b\x44\x3a\xc7\x9d\x83\x1d\xee\xfd\x75\xcc\x81\x72\x3d\xc0\x0a\x96\x8f\x6f\xde\x5c\xdc\x7c\xfe\x59\x2f\xfb\xe5\x4f\x60\xf9\xeb\xe5\xed\xdd\x2d\x78\x80\x65\x5d\x6c\x18\x24\xe2\xe1\x6f\x09\x04\x43\x9c\xb6\xac\x44\x69\x50\x67\xd0\x53\x00\xb5\x91\x9d\x44\x35\x4d\xf4\x99\xfe\xd0\x6c\xfa\xf1\xf8\xe9\xf2\x09\x9c\xfc\xae\xf2\x04\x46\x5d\xf5\x31\x01\xea\x6f\xf1\x8c\xc3\x46\xdb\x16\xc5\x68\x39\x89\x02\x8c\xaf\xe0\xc4\x20\xfe\xd7\x4f\x62\xc8\xf4\x6b\xd9\x67\x3b\xd3\xa8\x3e\x5c\x4f\xa3\xa6\x66\xc8\xbf\x11\x2a\x1b\xa9\xaf\xea\x49\xe2\xd3\xaf\x1b\x3e\x2c\x9e\x83\x9e\x98\x21\xef\x80\x5f\x06\x70\x38\x73\x96\x85\xd5\x47\x8e\x32\xb0\x52\x23\x26\x71\x53\x2b\x19\xab\x13\xcf\xc2\xeb\x52\xe1\x3c\xac\x2a\xde\x4b\x62\x65\xc0\x19\x43\x84\x8a\x57\xa6\xb0\x46\x39\x46\x0c\xea\x6d\x71\xc7\x80\x72\xb3\x34\xf5\x70\x52\x3e\xf5\xc6\x43\xf4\xb1\x9b\xb5\x9d\x06\x4e\xad\xae\x4e\xd8\xc4\x1e\x27\xe7\xdb\x73\xe0\x93\x40\xe5\xa3\x25\x21\xe3\xf4\xfc\x5f\x00\x00\x00\xff\xff\xe0\xa3\x12\xff\x89\x93\x00\x00")

func migrations20170523183416_initSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrations20170523183416_initSql,
		"migrations/20170523183416_init.sql",
	)
}

func migrations20170523183416_initSql() (*asset, error) {
	bytes, err := migrations20170523183416_initSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/20170523183416_init.sql", size: 37769, mode: os.FileMode(420), modTime: time.Unix(1538424515, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrations20171108110099_rbacSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x91\x4b\x6b\x3a\x31\x14\xc5\xf7\xf9\x14\x97\x6c\x54\xfe\x19\x70\x9c\x8c\xff\x19\xa4\x0b\xc1\x94\x0a\x3e\xa8\x8f\x76\x69\x62\x72\xd5\xd0\x79\x31\x99\x6a\x3f\x7e\x49\xc5\xb6\x20\x05\x17\xed\x2a\x87\x70\x0f\xf7\xdc\xf3\x0b\x02\xf8\xb7\x2f\x4b\x87\xb0\xae\x48\x10\xc0\xf2\x71\x02\xb6\x00\x87\xba\xb1\x65\x01\xad\x75\xd5\x02\xeb\x00\xdf\x50\xbf\x36\x68\xe0\x74\xc0\x02\x9a\x83\x75\x90\xdb\x7d\xad\x3e\x86\xac\x03\x55\x55\x99\x45\x43\xc8\x78\xb6\x14\x8b\x15\x8c\x67\xab\x39\x48\xa5\xb3\x4d\x5d\x66\x28\xa1\x2d\xad\x91\x4c\x16\x2a\x47\xc9\xa4\x41\xa7\x6b\x5b\x79\xb3\x64\x52\xd7\xa8\x1a\x34\x1b\xd5\xc8\x0e\x3c\x0d\x27\x6b\xb1\x84\x36\x0d\x77\x61\xac\xb8\x4e\x0d\xff\x9f\x26\xbd\xa8\x4b\x19\x55\x26\xb7\x05\x65\x74\xe8\x5f\xeb\x1a\xbf\xfe\x88\xe0\x37\x50\x16\xc6\x51\xc2\xc3\x6e\x9c\xf6\x7b\x49\xb7\x33\xf8\xbd\x20\x91\xc2\x90\xa7\x2a\x31\x9a\x73\xbe\xd5\x48\x19\x3d\xb7\x61\x8f\x5e\x8b\x8b\xfe\xeb\x1c\x3c\x8e\xe3\x30\xdc\x25\x18\xf5\x7b\x06\xb7\x29\x65\x34\x57\x85\xda\x63\x4d\x19\x9d\x9e\xd5\x0f\x19\xc8\x17\xe5\x51\x79\x2a\x2e\x9c\x3f\x21\xfb\xcf\x9b\x30\xd7\x65\x96\xa1\x81\xad\xd2\x2f\x84\x90\x91\x98\x88\x95\x80\xfb\xc5\x7c\xfa\xfd\xb4\xe7\x07\xb1\x10\xe0\xef\x83\x3b\xb8\xe6\x38\xb8\xcd\x77\x55\xfb\x8d\xbe\xab\x9a\x06\xe4\x3d\x00\x00\xff\xff\x78\x2c\x7c\x1b\xe4\x02\x00\x00")

func migrations20171108110099_rbacSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrations20171108110099_rbacSql,
		"migrations/20171108110099_rbac.sql",
	)
}

func migrations20171108110099_rbacSql() (*asset, error) {
	bytes, err := migrations20171108110099_rbacSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/20171108110099_rbac.sql", size: 740, mode: os.FileMode(420), modTime: time.Unix(1538410596, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrations20171122172200_indexesSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x94\xcd\x72\xe2\x3a\x10\x85\xd7\xf1\x53\x9c\x5d\x4c\x5d\x53\x15\xc8\x7f\x65\xe5\x5c\x7c\xef\x50\x43\x08\x63\xcc\x54\x58\x19\x61\x37\xa0\xc4\x48\x2e\x49\x0e\xe1\xed\xa7\x64\x93\x1f\x1c\x2d\x66\x47\x75\x7f\x3a\x7d\x50\x5b\xa7\xdb\xc5\x3f\x6b\x29\x35\x61\x56\x7a\xdd\x2e\xa6\xbf\x46\xe0\x02\x9a\x32\xc3\xa5\xc0\xe9\xac\x3c\x05\xd7\xa0\x37\xca\x2a\x43\x39\x76\x1b\x12\x30\x1b\xae\xb1\xe5\x6b\xc5\x6a\x88\x6b\xb0\xb2\x2c\x38\xe5\x9e\x95\x30\x1b\xc2\x84\x29\xc3\xeb\xe6\x92\x0a\xb9\x83\x20\xca\x35\x8c\x84\xa2\xad\x7c\xa5\x9a\x29\x15\xdf\x32\xb5\xc7\x0b\xed\xa1\xb9\xc8\x08\xdc\x9c\x6a\x08\x69\x50\x69\x5a\x55\x05\x98\xd8\xef\xd8\xde\x0b\x47\x49\x14\x23\x09\xef\x47\x11\x16\x9a\xaf\x05\x2b\x16\x18\xc4\x8f\x13\x4c\xe2\xe1\x43\x18\xcf\xf1\x33\x9a\x07\x08\x07\x83\xaf\x05\x9f\xe7\x01\x72\x66\x28\x80\x60\x5b\xea\xdc\x39\xcc\xed\x78\x51\x60\x49\x58\xee\x31\x8f\xc2\x18\x4c\xe4\x96\x10\xd0\xd5\xb2\x7c\xa7\x28\xb7\xfd\x66\xae\xdb\xcb\x24\x8c\x93\x61\x32\x7c\x1c\xe3\x7e\x8e\x38\x1c\xff\x1f\xf9\x56\xce\xb7\xd3\x3b\x1d\x78\xc0\x74\x76\x7f\x04\x59\x7f\xb5\xab\x56\x6f\x8a\x5e\x1f\xbe\x77\x72\xf2\x49\x97\x67\xf8\x1d\x8e\x66\xd1\x14\xa3\x68\x3a\x45\xf2\x23\x1c\xc3\xef\x9f\xf5\xce\x3a\xc1\x31\xd7\x73\x73\xbd\x36\xd7\x77\x73\xfd\x36\x77\xee\xe6\xce\xdb\xdc\x85\x9b\xbb\x68\x73\x97\x6e\xee\xb2\xcd\x5d\xb9\xb9\xab\x36\x77\xed\xe6\xae\xdb\xdc\x8d\x9b\xbb\x69\x73\xb7\x6e\xee\xf6\xdb\x3d\xbb\x17\xd2\xff\xbe\x10\xf7\x46\xfa\xdf\x36\x72\xeb\x18\xfd\x10\x3e\xd5\x35\xcf\x7e\xb8\xff\xc6\x51\x98\x44\x18\x8e\x07\xd1\x13\xb8\xd6\x15\xa5\xda\x30\x43\x69\x56\x69\x23\xb7\xa4\x52\x9e\xa7\xa5\x92\xcf\x94\x19\xfb\x33\x2b\xa4\xa6\x3c\x65\x26\x55\xb4\xb2\x05\xb3\x2f\x29\xe5\x22\xa7\x37\x3c\x8e\x1b\x05\xbf\x56\x08\xf0\x45\x22\xc0\xa7\x46\x80\x0f\x91\x00\x8d\x4a\x00\x2b\xd3\xb9\x3b\xb6\xf3\xcc\x15\x4b\x1b\x4f\xd9\x86\x89\x35\xa5\x85\x5c\x1f\x0a\x3c\x4f\x57\x9c\x8a\xfc\x73\xb4\x93\xf6\xdf\xe9\x00\x35\x7e\x78\xab\x99\x22\x66\x08\x4c\xa0\x39\xbe\x92\xaa\x7e\xbf\x6b\x12\xa4\x98\x4d\xa3\x57\xae\x4c\xc5\x8a\xe6\xd4\xd1\xdb\x3c\x5c\x52\xb5\xad\x23\xc6\x46\xc3\x7f\xb3\xd1\x28\x89\x9e\x92\x83\xed\x45\xf3\xbf\x1b\x7f\x3a\x5d\x55\x45\x91\xf2\xfc\x6d\xe1\x1f\x35\x52\x9e\xeb\xf4\x30\x65\x71\xb0\x75\xc8\xcb\x81\xdc\x89\xf7\xc4\xfc\x88\x4b\x5b\xfc\xab\xc0\x54\xb2\x28\x6c\xb0\xb0\xec\xc5\xf3\xfe\x04\x00\x00\xff\xff\xaf\xa4\x57\xce\x85\x05\x00\x00")

func migrations20171122172200_indexesSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrations20171122172200_indexesSql,
		"migrations/20171122172200_indexes.sql",
	)
}

func migrations20171122172200_indexesSql() (*asset, error) {
	bytes, err := migrations20171122172200_indexesSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/20171122172200_indexes.sql", size: 1413, mode: os.FileMode(420), modTime: time.Unix(1538004270, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"migrations/20170523183416_init.sql": migrations20170523183416_initSql,
	"migrations/20171108110099_rbac.sql": migrations20171108110099_rbacSql,
	"migrations/20171122172200_indexes.sql": migrations20171122172200_indexesSql,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"migrations": &bintree{nil, map[string]*bintree{
		"20170523183416_init.sql": &bintree{migrations20170523183416_initSql, map[string]*bintree{}},
		"20171108110099_rbac.sql": &bintree{migrations20171108110099_rbacSql, map[string]*bintree{}},
		"20171122172200_indexes.sql": &bintree{migrations20171122172200_indexesSql, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

