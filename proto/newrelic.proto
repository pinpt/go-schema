

message NewrelicApplication {
    // Primary key (normally a hash of third party id)
    proto.ID id = 1;
    proto.Checksum checksum = 2;
    // Reference to the customer who owns this object
    proto.UID customer_id = 3 [(proto.column).notnull=true,(proto.column).index=true];
    // Object ID provided by Newrelic
    int64 ext_id = 4 [(proto.column).notnull=true];
    // Name of the application
    string name = 5 [(proto.column).notnull=true];
    string health_status = 6;
    // Is the application reporting data to Newrelic
    bool reporting = 7 [(proto.column).notnull=true];

    
    option (proto.table).has_one={table:"customer",pk:"customer_id",fk:"id",name:"customer"};
    
}



message NewrelicDeployment {
    // Primary key (normally a hash of third party id)
    proto.ID id = 1;
    proto.Checksum checksum = 2;
    // Reference to the customer who owns this object
    proto.UID customer_id = 3 [(proto.column).notnull=true,(proto.column).index=true];
    // Reference to application using source ID
    int64 application_ext_id = 4 [(proto.column).notnull=true,(proto.column).index=true];
    // Reference to application using our generated ID
    proto.UID application_id = 5 [(proto.column).index=true,(proto.column).notnull=true];
    int64 ext_id = 6 [(proto.column).notnull=true];
    string revision = 7 [(proto.column).notnull=true];
    string changelog = 8;
    string description = 9;
    string user = 10 [(proto.column).notnull=true];
    int64 timestamp = 11 [(proto.column).notnull=true,(proto.column).type="BIGINT"];

    
    option (proto.table).has_one={table:"customer",pk:"customer_id",fk:"id",name:"customer"};
    
}



message NewrelicAlertsViolation {
    // Primary key (normally a hash of third party id)
    proto.ID id = 1;
    proto.Checksum checksum = 2;
    // Reference to the customer who owns this object
    proto.UID customer_id = 3 [(proto.column).notnull=true,(proto.column).index=true];
    int64 ext_id = 4 [(proto.column).notnull=true];
    int64 duration = 5 [(proto.column).notnull=true];
    string policy_name = 6 [(proto.column).notnull=true];
    string condition_name = 7 [(proto.column).notnull=true];
    string priority = 8 [(proto.column).notnull=true];
    int64 opened_at = 9 [(proto.column).notnull=true];
    string entity_product = 10 [(proto.column).notnull=true];
    string entity_type = 11 [(proto.column).notnull=true];
    int64 entity_group_id = 12 [(proto.column).notnull=true];
    int64 entity_id = 13 [(proto.column).notnull=true];
    string entity_name = 14 [(proto.column).notnull=true];
    // Reference to alerts_policy using source ID
    int64 policy_ext_id = 15 [(proto.column).notnull=true,(proto.column).index=true];
    // Reference to alerts_policy using our generated ID
    proto.UID policy_id = 16 [(proto.column).index=true,(proto.column).notnull=true];
    // Reference to alerts_condition using source ID
    int64 condition_ext_id = 17 [(proto.column).notnull=true,(proto.column).index=true];
    // Reference to alerts_condition using our generated ID
    proto.UID condition_id = 18 [(proto.column).index=true,(proto.column).notnull=true];

    
    option (proto.table).has_one={table:"customer",pk:"customer_id",fk:"id",name:"customer"};
    
}



message NewrelicAlertsPolicy {
    // Primary key (normally a hash of third party id)
    proto.ID id = 1;
    proto.Checksum checksum = 2;
    // Reference to the customer who owns this object
    proto.UID customer_id = 3 [(proto.column).notnull=true,(proto.column).index=true];
    int64 ext_id = 4 [(proto.column).notnull=true];
    string incident_preference = 5 [(proto.column).notnull=true];
    string name = 6 [(proto.column).notnull=true];
    int64 created_at = 7 [(proto.column).notnull=true];
    int64 updated_at = 8 [(proto.column).notnull=true];

    
    option (proto.table).has_one={table:"customer",pk:"customer_id",fk:"id",name:"customer"};
    
}



message NewrelicServer {
    // Primary key (normally a hash of third party id)
    proto.ID id = 1;
    proto.Checksum checksum = 2;
    // Reference to the customer who owns this object
    proto.UID customer_id = 3 [(proto.column).notnull=true,(proto.column).index=true];
    int64 ext_id = 4 [(proto.column).notnull=true];
    int64 account_id = 5 [(proto.column).notnull=true];
    string name = 6 [(proto.column).notnull=true];
    string host = 7 [(proto.column).notnull=true];
    string health_status = 8;
    bool reporting = 9 [(proto.column).notnull=true];
    int64 last_reported_at = 10 [(proto.column).notnull=true,(proto.column).type="BIGINT"];
    double summary_cpu = 11;
    double summary_cpu_stolen = 12;
    double summary_disk_io = 13;
    double summary_memory = 14;
    int64 summary_memory_used = 15;
    int64 summary_memory_total = 16;
    double summary_fullest_disk = 17;
    int64 summary_fullest_disk_free = 18;

    
    option (proto.table).has_one={table:"customer",pk:"customer_id",fk:"id",name:"customer"};
    
}



message NewrelicAlertsIncident {
    // Primary key (normally a hash of third party id)
    proto.ID id = 1;
    proto.Checksum checksum = 2;
    // Reference to the customer who owns this object
    proto.UID customer_id = 3 [(proto.column).notnull=true,(proto.column).index=true];
    int64 ext_id = 4 [(proto.column).notnull=true];
    int64 opened_at = 5 [(proto.column).notnull=true];
    int64 closed_at = 6;
    string incident_preference = 7 [(proto.column).notnull=true];
    // Reference to alerts_violation using source ID
    string violation_ext_ids = 8 [(proto.column).notnull=true,(proto.column).type="JSON"];
    // Reference to alerts_violation using our generated IDs
    string violation_ids = 9 [(proto.column).notnull=true,(proto.column).type="JSON"];
    // Reference to alerts_policy using source ID
    int64 policy_ext_id = 10 [(proto.column).index=true];
    // Reference to alerts_policy using our generated ID
    proto.UID policy_id = 11 [(proto.column).index=true];

    
    option (proto.table).has_one={table:"customer",pk:"customer_id",fk:"id",name:"customer"};
    
}



message NewrelicAlertsCondition {
    // Primary key (normally a hash of third party id)
    proto.ID id = 1;
    proto.Checksum checksum = 2;
    // Reference to the customer who owns this object
    proto.UID customer_id = 3 [(proto.column).notnull=true,(proto.column).index=true];
    // Reference to alerts_policy using source ID
    int64 policy_ext_id = 4 [(proto.column).notnull=true,(proto.column).index=true];
    // Reference to alerts_policy using our generated ID
    proto.UID policy_id = 5 [(proto.column).index=true,(proto.column).notnull=true];
    int64 ext_id = 6 [(proto.column).notnull=true];
    string type = 7 [(proto.column).notnull=true];
    string name = 8 [(proto.column).notnull=true];
    bool enabled = 9 [(proto.column).notnull=true];
    string metric = 10 [(proto.column).notnull=true];
    string terms = 11 [(proto.column).notnull=true,(proto.column).type="JSON"];

    
    option (proto.table).has_one={table:"customer",pk:"customer_id",fk:"id",name:"customer"};
    
}



message NewrelicMetric {
    // Primary key (normally a hash of third party id)
    proto.ID id = 1;
    proto.Checksum checksum = 2;
    // Reference to the customer who owns this object
    proto.UID customer_id = 3 [(proto.column).notnull=true,(proto.column).index=true];
    // Reference to application using source ID
    int64 application_ext_id = 4 [(proto.column).notnull=true,(proto.column).index=true];
    // Reference to application using our generated ID
    proto.UID application_id = 5 [(proto.column).index=true,(proto.column).notnull=true];
    string name = 6 [(proto.column).notnull=true];
    string value_name = 7 [(proto.column).notnull=true];
    int64 start = 8 [(proto.column).notnull=true,(proto.column).type="BIGINT"];
    int64 duration_sec = 9 [(proto.column).notnull=true];
    double value = 10 [(proto.column).notnull=true];

    
    option (proto.table).has_one={table:"customer",pk:"customer_id",fk:"id",name:"customer"};
    
}

